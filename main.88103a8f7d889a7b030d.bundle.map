{"version":3,"sources":["webpack:///main.88103a8f7d889a7b030d.bundle.js","webpack:///./src/simulation/instructions-all.ts","webpack:///./src/simulation/world-render-data.ts","webpack:///./src/simulation/color.ts","webpack:///./src/simulation/point.ts","webpack:///./src/simulation/utils.ts","webpack:///./src/simulation/world-runner.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/web-worker/web-worker.service.ts","webpack:///./src/app/web-worker/web-worker.ts","webpack:///./src/app/world-view/world-view.component.ts","webpack:///./src/environments/environment.prod.ts","webpack:///./src/simulation/genome-color-map.ts","webpack:///./src/simulation/lib.module.ts","webpack:///./src/simulation/organism.ts","webpack:///./src/simulation/world.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/world-view/world-view.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/world-view/world-view.component.html","webpack:///./src/simulation/element.ts","webpack:///./src/simulation/instruction.ts","webpack:///./src/simulation/world-parameters.ts"],"names":["webpackJsonp","202","module","exports","__webpack_require__","__WEBPACK_IMPORTED_MODULE_0__element__","__WEBPACK_IMPORTED_MODULE_1__instruction__","d","InstructionsAll","__extends","this","b","__","constructor","p","hasOwnProperty","prototype","Object","create","all","InstructionMove","_super","call","do","organism","world","element","move","push","InstructionMoveAndEat","InstructionHyper","instructionsPerTurn","EXECUTE_AGAIN","InstructionPhotosynthesize","InstructionSleep","sleepCount","InstructionTurnLeft","setOrientation","headOrientation","InstructionTurnRight","InstructionOrientUp","InstructionOrientDown","InstructionOrientLeft","InstructionOrientRight","InstructionIfFoodFacing","testIfFacing","FOOD","doNotIf","DONT_ADVANCE","InstructionIfNotFoodFacing","InstructionIfBlocked","wasBlocked","InstructionIfNotBlocked","InstructionElse","energy","parameters","energyTurnCost","203","__WEBPACK_IMPORTED_MODULE_0__color__","__WEBPACK_IMPORTED_MODULE_1__element__","__WEBPACK_IMPORTED_MODULE_2__world_parameters__","WorldRenderData","determineTopTen","preparePixels","determineTopTenList","dim","WORLDSIZE","byteLength","_pixels","ArrayBuffer","pixels","outBuffer","Uint32Array","black","rgba","gray","green","darkgreen","i","x","y","elements","type","BARRIER","ORGANISM","colorRGBA","genomesToCounts","headOrganism","genome","count","color","getAsCSS","next","sortedArray","key","sort","a","topTenList","slice","length","getTransferableData","result","302","Color","r","g","_r","_g","_b","_a","_rgba","isLittleEndian","defineProperty","get","enumerable","configurable","buf","data32","data8","Uint8Array","303","Point","add","point","randomize","size","Math","floor","random","304","Utils","randRangeInt","min","max","305","__WEBPACK_IMPORTED_MODULE_0__world__","__WEBPACK_IMPORTED_MODULE_1__world_parameters__","__WEBPACK_IMPORTED_MODULE_2__world_render_data__","WorldRunner","params","run","callback","turnCrank","self","curTime","Date","getTime","elapsedRenderTime","lastRenderMS","elaspedTopTenSurvey","lastTopTenSurveyMS","surveyTopTen","MIN_SURVEY_MS","MIN_RENDER_MS","renderData","window","setInterval","workerThreadFunction","postMessage","addEventListener","e","data","setObstacles","obstacles","reset","insert","356","webpackEmptyContext","req","Error","keys","resolve","id","357","__WEBPACK_IMPORTED_MODULE_0__polyfills_ts__","__WEBPACK_IMPORTED_MODULE_1__angular_platform_browser_dynamic__","n","__WEBPACK_IMPORTED_MODULE_2__angular_core__","__WEBPACK_IMPORTED_MODULE_3__environments_environment__","__WEBPACK_IMPORTED_MODULE_4__app_app_module__","production","bootstrapModule","467","__WEBPACK_IMPORTED_MODULE_0__angular_core__","__WEBPACK_IMPORTED_MODULE_1_angular2_materialize__","__WEBPACK_IMPORTED_MODULE_2__web_worker_web_worker_service__","__WEBPACK_IMPORTED_MODULE_3__simulation_lib_module__","AppComponent","__decorate","decorators","target","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","__metadata","k","v","metadata","elementRef","_webWorkerService","modalActions","allInstructions","useWebWorker","worldRunner","promise","worker","getWorker","onmessage","console","log","renderPixels","topTen","ngOnInit","elem","$","nativeElement","find","addClass","collapsible","accordion","openAbout","onObstacleChange","val","resetWorld","allCodes","forEach","instruction","code","indexOf","emit","action","closeAbout","selector","template","styles","providers","468","__WEBPACK_IMPORTED_MODULE_0__angular_platform_browser__","__WEBPACK_IMPORTED_MODULE_1__angular_core__","__WEBPACK_IMPORTED_MODULE_2__angular_forms__","__WEBPACK_IMPORTED_MODULE_3__angular_http__","__WEBPACK_IMPORTED_MODULE_4_angular2_materialize__","__WEBPACK_IMPORTED_MODULE_5__app_component__","__WEBPACK_IMPORTED_MODULE_6__world_view_world_view_component__","AppModule","declarations","imports","bootstrap","469","__WEBPACK_IMPORTED_MODULE_1__web_worker__","WebWorkerService","apply","470","workerFunctionToUrlMap","WeakMap","promiseToWorkerMap","workerFunction","url","getOrCreateWorkerUrl","runUrl","Worker","createPromiseForWorker","createPromiseCleaner","set","terminate","removePromise","Promise","reject","event","fn","has","createWorkerUrl","resolveString","toString","webWorkerTemplate","blob","Blob","URL","createObjectURL","_this","delete","471","WorldViewComponent","lastWidth","lastHeight","magnification","magnificationSize","magnificationX","magnificationY","mouseDown","canvasOffScreen","canvasOnScreen","clicked","width","clientX","clientY","preventDefault","mousedown","mousemove","mouseup","ngOnChanges","changes","updatePixels","ngDoCheck","parent","w","h","height","css","inBuffer","canvas","ctx","getContext","worldSize","imageData","createImageData","test","buf8","Uint8ClampedArray","iOut","iIn","putImageData","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","msImageSmoothingEnabled","imageSmoothingEnabled","srcX","srcY","destX","destY","destSize","drawImage","strokeStyle","lineWidth","strokeRect","inputs","472","environment","473","__WEBPACK_IMPORTED_MODULE_0_core_js_es6_symbol__","__WEBPACK_IMPORTED_MODULE_1_core_js_es6_object__","__WEBPACK_IMPORTED_MODULE_2_core_js_es6_function__","__WEBPACK_IMPORTED_MODULE_3_core_js_es6_parse_int__","__WEBPACK_IMPORTED_MODULE_4_core_js_es6_parse_float__","__WEBPACK_IMPORTED_MODULE_5_core_js_es6_number__","__WEBPACK_IMPORTED_MODULE_6_core_js_es6_math__","__WEBPACK_IMPORTED_MODULE_7_core_js_es6_string__","__WEBPACK_IMPORTED_MODULE_8_core_js_es6_date__","__WEBPACK_IMPORTED_MODULE_9_core_js_es6_array__","__WEBPACK_IMPORTED_MODULE_10_core_js_es6_regexp__","__WEBPACK_IMPORTED_MODULE_11_core_js_es6_map__","__WEBPACK_IMPORTED_MODULE_12_core_js_es6_set__","__WEBPACK_IMPORTED_MODULE_13_core_js_es6_reflect__","__WEBPACK_IMPORTED_MODULE_14_core_js_es7_reflect__","__WEBPACK_IMPORTED_MODULE_15_zone_js_dist_zone__","474","GenomeColorMap","getColorForGenome","_genomeColorMap","colors","colorIndex","*","475","__WEBPACK_IMPORTED_MODULE_3__world_runner__","__WEBPACK_IMPORTED_MODULE_4__instructions_all__","SimulationModule","476","__WEBPACK_IMPORTED_MODULE_1__point__","__WEBPACK_IMPORTED_MODULE_2__genome_color_map__","__WEBPACK_IMPORTED_MODULE_3__instruction__","__WEBPACK_IMPORTED_MODULE_4__utils__","Organism","location","numExposedPhotosynthesizeCells","prev","headSegment","tailSegment","activeSegment","initialize","nextElement","headElementInactive","addSegment","lifespan","lifespanPerSegment","randomizationLifespace","lifespanRandomizationPercent","randomizeOrientation","isOccluded","instructionFromCode","locationX","locationY","put","energyGainedFromPhotosythesizing","orientation","headDirectionX","headDirectionY","andEat","energyMoveAndEatCost","energyMoveCost","destinationX","destinationY","elementAtDestination","lastX","lastY","energyGain","biteStrength","digestionEfficiency","killOrganism","validateOrganismAfterMove","validateBoardAfterMove","locationMap","elementType","distance","testNext","getSpawnEnergy","spawnEnergyPerSegment","spawnIfAble","mutationChance","mutationRate","mutateGenome","dx","dy","nx","ny","child","addOrganism","mutationType","newGenome","whereIndex","477","__WEBPACK_IMPORTED_MODULE_0__world_parameters__","__WEBPACK_IMPORTED_MODULE_2__instructions_all__","__WEBPACK_IMPORTED_MODULE_3__organism__","__WEBPACK_IMPORTED_MODULE_4__point__","__WEBPACK_IMPORTED_MODULE_5__utils__","World","MAX_WORLD_SIZE","numOrganisms","turn","foodElement","barrierElement","newObstacles","undefined","j","headOrganismInactive","initialFoodCount","getEmptyLocation","createOrganism","validate","segment","elementAtPosition","prepareObstacles","nextOrganism","maximumOrganisms","foodDropSpeed","recycle","oldHead","wasEaten","points","634","635","636","637","665","70","ElementType","Element","96","InstructionResult","Instruction","InstructionParameter","_name","_key","_defaultValue","_code","_description","energyImpact","_parameterDefinitions","DEFAULT_ENERGY_IMPACT","_parameters","_instructionMap","energyImpactParam","parameter","defaultValue","_allInstructions","97","WorldParameters","speed"],"mappings":"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","file":"main.88103a8f7d889a7b030d.bundle.js","sourcesContent":["webpackJsonp([0,4],{\n\n/***/ 202:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__element__ = __webpack_require__(70);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__instruction__ = __webpack_require__(96);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return InstructionsAll; });\n/* unused harmony export InstructionMove */\n/* unused harmony export InstructionMoveAndEat */\n/* unused harmony export InstructionHyper */\n/* unused harmony export InstructionPhotosynthesize */\n/* unused harmony export InstructionSleep */\n/* unused harmony export InstructionTurnLeft */\n/* unused harmony export InstructionTurnRight */\n/* unused harmony export InstructionOrientUp */\n/* unused harmony export InstructionOrientDown */\n/* unused harmony export InstructionOrientLeft */\n/* unused harmony export InstructionOrientRight */\n/* unused harmony export InstructionIfFoodFacing */\n/* unused harmony export InstructionIfNotFoodFacing */\n/* unused harmony export InstructionIfBlocked */\n/* unused harmony export InstructionIfNotBlocked */\n/* unused harmony export InstructionElse */\n/// <reference path='point.ts'/>\n/// <reference path='world.ts'/>\n/// <reference path='element.ts'/>\n/// <reference path='instruction.ts'/>\n/// <reference path='utils.ts'/>\n/// <reference path='organism.ts'/>\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n//module LibSim {\n/********************\n * All instructions\n */\nvar InstructionsAll = (function () {\n    function InstructionsAll() {\n    }\n    InstructionsAll.all = [];\n    return InstructionsAll;\n}());\n/***********************************************************************\n |   \"m\": Move instruction\n ***********************************************************************/\nvar InstructionMove = (function (_super) {\n    __extends(InstructionMove, _super);\n    function InstructionMove() {\n        _super.call(this, 'm', 'Move the organism by one element in the current orientation of the head');\n    }\n    InstructionMove.prototype.do = function (organism, world, element) {\n        organism.move(world, false);\n    };\n    return InstructionMove;\n}(__WEBPACK_IMPORTED_MODULE_1__instruction__[\"a\" /* Instruction */]));\nInstructionsAll.all.push(new InstructionMove());\n/***********************************************************************\n |   \"m\": Move instruction\n ***********************************************************************/\nvar InstructionMoveAndEat = (function (_super) {\n    __extends(InstructionMoveAndEat, _super);\n    function InstructionMoveAndEat() {\n        _super.call(this, 'M', 'Move and eat any food or Photosyntheize cell in front of the head');\n    }\n    InstructionMoveAndEat.prototype.do = function (organism, world, element) {\n        organism.move(world, true);\n    };\n    return InstructionMoveAndEat;\n}(__WEBPACK_IMPORTED_MODULE_1__instruction__[\"a\" /* Instruction */]));\nInstructionsAll.all.push(new InstructionMoveAndEat());\n/***********************************************************************\n |   \"H\": hyper mode!\n ***********************************************************************/\nvar InstructionHyper = (function (_super) {\n    __extends(InstructionHyper, _super);\n    function InstructionHyper() {\n        _super.call(this, 'H', 'Hypermode!');\n    }\n    InstructionHyper.prototype.do = function (organism, world, element) {\n        organism.instructionsPerTurn += organism.instructionsPerTurn;\n        //organism.energy += world.parameters.energyTurnCost; // zero cost\n        return __WEBPACK_IMPORTED_MODULE_1__instruction__[\"b\" /* InstructionResult */].EXECUTE_AGAIN;\n    };\n    return InstructionHyper;\n}(__WEBPACK_IMPORTED_MODULE_1__instruction__[\"a\" /* Instruction */]));\nInstructionsAll.all.push(new InstructionHyper());\n/***********************************************************************\n |   \"*\": Photosyntheize instruction\n ***********************************************************************/\nvar InstructionPhotosynthesize = (function (_super) {\n    __extends(InstructionPhotosynthesize, _super);\n    function InstructionPhotosynthesize() {\n        _super.call(this, '*', 'Gains energy');\n    }\n    InstructionPhotosynthesize.prototype.do = function (organism, world, element) {\n        /*\n        if (! element.isOccluded) {\n            organism.energy += world.parameters.energyGainedFromPhotosythesizing;\n        }\n        */\n    };\n    return InstructionPhotosynthesize;\n}(__WEBPACK_IMPORTED_MODULE_1__instruction__[\"a\" /* Instruction */]));\nInstructionsAll.all.push(new InstructionPhotosynthesize());\n/***********************************************************************\n |   \"Z\": Sleep\n ***********************************************************************/\nvar InstructionSleep = (function (_super) {\n    __extends(InstructionSleep, _super);\n    function InstructionSleep() {\n        _super.call(this, 'Z', 'Sleep');\n    }\n    InstructionSleep.prototype.do = function (organism, world, element) {\n        organism.sleepCount += 5;\n    };\n    return InstructionSleep;\n}(__WEBPACK_IMPORTED_MODULE_1__instruction__[\"a\" /* Instruction */]));\nInstructionsAll.all.push(new InstructionSleep());\n/***********************************************************************\n |   \"<\": Turn left\n ***********************************************************************/\nvar InstructionTurnLeft = (function (_super) {\n    __extends(InstructionTurnLeft, _super);\n    function InstructionTurnLeft() {\n        _super.call(this, '<', 'Turn left');\n    }\n    InstructionTurnLeft.prototype.do = function (organism, world, element) {\n        organism.setOrientation((organism.headOrientation + 3) % 4);\n    };\n    return InstructionTurnLeft;\n}(__WEBPACK_IMPORTED_MODULE_1__instruction__[\"a\" /* Instruction */]));\nInstructionsAll.all.push(new InstructionTurnLeft());\n/***********************************************************************\n |   \">\": Turn right\n ***********************************************************************/\nvar InstructionTurnRight = (function (_super) {\n    __extends(InstructionTurnRight, _super);\n    function InstructionTurnRight() {\n        _super.call(this, '>', 'Turn right');\n    }\n    InstructionTurnRight.prototype.do = function (organism, world, element) {\n        organism.setOrientation((organism.headOrientation + 1) % 4);\n    };\n    return InstructionTurnRight;\n}(__WEBPACK_IMPORTED_MODULE_1__instruction__[\"a\" /* Instruction */]));\nInstructionsAll.all.push(new InstructionTurnRight());\n/***********************************************************************\n |   \"U\": Orient up\n ***********************************************************************/\nvar InstructionOrientUp = (function (_super) {\n    __extends(InstructionOrientUp, _super);\n    function InstructionOrientUp() {\n        _super.call(this, 'U', 'Orient Up');\n    }\n    InstructionOrientUp.prototype.do = function (organism, world, element) {\n        organism.setOrientation(0);\n    };\n    return InstructionOrientUp;\n}(__WEBPACK_IMPORTED_MODULE_1__instruction__[\"a\" /* Instruction */]));\nInstructionsAll.all.push(new InstructionOrientUp());\n/***********************************************************************\n |   \"D\": Orient down\n ***********************************************************************/\nvar InstructionOrientDown = (function (_super) {\n    __extends(InstructionOrientDown, _super);\n    function InstructionOrientDown() {\n        _super.call(this, 'D', 'Orient Down');\n    }\n    InstructionOrientDown.prototype.do = function (organism, world, element) {\n        organism.setOrientation(2);\n    };\n    return InstructionOrientDown;\n}(__WEBPACK_IMPORTED_MODULE_1__instruction__[\"a\" /* Instruction */]));\nInstructionsAll.all.push(new InstructionOrientDown());\n/***********************************************************************\n |   \"L\": Orient left\n ***********************************************************************/\nvar InstructionOrientLeft = (function (_super) {\n    __extends(InstructionOrientLeft, _super);\n    function InstructionOrientLeft() {\n        _super.call(this, 'L', 'Orient Left');\n    }\n    InstructionOrientLeft.prototype.do = function (organism, world, element) {\n        organism.setOrientation(3);\n    };\n    return InstructionOrientLeft;\n}(__WEBPACK_IMPORTED_MODULE_1__instruction__[\"a\" /* Instruction */]));\nInstructionsAll.all.push(new InstructionOrientLeft());\n/***********************************************************************\n |   \"R\": Orient right\n ***********************************************************************/\nvar InstructionOrientRight = (function (_super) {\n    __extends(InstructionOrientRight, _super);\n    function InstructionOrientRight() {\n        _super.call(this, 'R', 'Orient Right');\n    }\n    InstructionOrientRight.prototype.do = function (organism, world, element) {\n        organism.setOrientation(1);\n    };\n    return InstructionOrientRight;\n}(__WEBPACK_IMPORTED_MODULE_1__instruction__[\"a\" /* Instruction */]));\nInstructionsAll.all.push(new InstructionOrientRight());\n/***********************************************************************\n |   \"0\": Test if facing food\n ***********************************************************************/\nvar InstructionIfFoodFacing = (function (_super) {\n    __extends(InstructionIfFoodFacing, _super);\n    function InstructionIfFoodFacing() {\n        _super.call(this, '0', 'Test if facing food');\n    }\n    InstructionIfFoodFacing.prototype.do = function (organism, world, element) {\n        if (!organism.testIfFacing(__WEBPACK_IMPORTED_MODULE_0__element__[\"a\" /* ElementType */].FOOD, world)) {\n            organism.doNotIf();\n            return __WEBPACK_IMPORTED_MODULE_1__instruction__[\"b\" /* InstructionResult */].DONT_ADVANCE;\n        }\n    };\n    return InstructionIfFoodFacing;\n}(__WEBPACK_IMPORTED_MODULE_1__instruction__[\"a\" /* Instruction */]));\nInstructionsAll.all.push(new InstructionIfFoodFacing());\n/***********************************************************************\n |   \"1\": Test if NOT facing food\n ***********************************************************************/\nvar InstructionIfNotFoodFacing = (function (_super) {\n    __extends(InstructionIfNotFoodFacing, _super);\n    function InstructionIfNotFoodFacing() {\n        _super.call(this, '1', 'Test if NOT facing food');\n    }\n    InstructionIfNotFoodFacing.prototype.do = function (organism, world, element) {\n        if (organism.testIfFacing(__WEBPACK_IMPORTED_MODULE_0__element__[\"a\" /* ElementType */].FOOD, world)) {\n            organism.doNotIf();\n            return __WEBPACK_IMPORTED_MODULE_1__instruction__[\"b\" /* InstructionResult */].DONT_ADVANCE;\n        }\n    };\n    return InstructionIfNotFoodFacing;\n}(__WEBPACK_IMPORTED_MODULE_1__instruction__[\"a\" /* Instruction */]));\nInstructionsAll.all.push(new InstructionIfNotFoodFacing());\n/***********************************************************************\n |   \"2\": Test if blocked\n ***********************************************************************/\nvar InstructionIfBlocked = (function (_super) {\n    __extends(InstructionIfBlocked, _super);\n    function InstructionIfBlocked() {\n        _super.call(this, '2', 'Test if blocked');\n    }\n    InstructionIfBlocked.prototype.do = function (organism, world, element) {\n        if (!organism.wasBlocked) {\n            organism.doNotIf();\n            return __WEBPACK_IMPORTED_MODULE_1__instruction__[\"b\" /* InstructionResult */].DONT_ADVANCE;\n        }\n    };\n    return InstructionIfBlocked;\n}(__WEBPACK_IMPORTED_MODULE_1__instruction__[\"a\" /* Instruction */]));\nInstructionsAll.all.push(new InstructionIfBlocked());\n/***********************************************************************\n |   \"3\": Test if NOT blocked\n ***********************************************************************/\nvar InstructionIfNotBlocked = (function (_super) {\n    __extends(InstructionIfNotBlocked, _super);\n    function InstructionIfNotBlocked() {\n        _super.call(this, '3', 'Test if NOT blocked');\n    }\n    InstructionIfNotBlocked.prototype.do = function (organism, world, element) {\n        if (organism.wasBlocked) {\n            organism.doNotIf();\n            return __WEBPACK_IMPORTED_MODULE_1__instruction__[\"b\" /* InstructionResult */].DONT_ADVANCE;\n        }\n    };\n    return InstructionIfNotBlocked;\n}(__WEBPACK_IMPORTED_MODULE_1__instruction__[\"a\" /* Instruction */]));\nInstructionsAll.all.push(new InstructionIfNotBlocked());\n/***********************************************************************\n |   \"e\": Else\n ***********************************************************************/\nvar InstructionElse = (function (_super) {\n    __extends(InstructionElse, _super);\n    function InstructionElse() {\n        _super.call(this, 'e', 'Else');\n    }\n    InstructionElse.prototype.do = function (organism, world, element) {\n        organism.energy += world.parameters.energyTurnCost * .75;\n    };\n    return InstructionElse;\n}(__WEBPACK_IMPORTED_MODULE_1__instruction__[\"a\" /* Instruction */]));\nInstructionsAll.all.push(new InstructionElse());\n//}\n//# sourceMappingURL=/Users/sschafer/projhome/presto-evolution/src/instructions-all.js.map\n\n/***/ },\n\n/***/ 203:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__color__ = __webpack_require__(302);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__element__ = __webpack_require__(70);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__world_parameters__ = __webpack_require__(97);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return WorldRenderData; });\n\n\n\n//module LibSim {\n/*\nimport { World } from './world';\nimport { Color } from './color';\nimport { ElementType } from './element';\n*/\n/**\n * A transfer object that is sent from the worker thread to the main rendering thread instructing it what to render.\n */\nvar WorldRenderData = (function () {\n    function WorldRenderData(world, determineTopTen) {\n        if (determineTopTen === void 0) { determineTopTen = false; }\n        this.preparePixels(world);\n        if (determineTopTen) {\n            this.determineTopTenList(world);\n        }\n    }\n    WorldRenderData.prototype.preparePixels = function (world) {\n        var dim = __WEBPACK_IMPORTED_MODULE_2__world_parameters__[\"a\" /* WorldParameters */].WORLDSIZE;\n        var byteLength = dim * dim * 4;\n        if (WorldRenderData._pixels == null || WorldRenderData._pixels.byteLength != byteLength) {\n            WorldRenderData._pixels = new ArrayBuffer(byteLength);\n        }\n        this.pixels = WorldRenderData._pixels;\n        var outBuffer = new Uint32Array(this.pixels);\n        var black = new __WEBPACK_IMPORTED_MODULE_0__color__[\"a\" /* Color */](0, 0, 0).rgba;\n        var gray = new __WEBPACK_IMPORTED_MODULE_0__color__[\"a\" /* Color */](128, 128, 128).rgba;\n        var green = new __WEBPACK_IMPORTED_MODULE_0__color__[\"a\" /* Color */](0, 255, 0).rgba;\n        var darkgreen = new __WEBPACK_IMPORTED_MODULE_0__color__[\"a\" /* Color */](0, 128, 0).rgba;\n        var i = 0;\n        for (var x = 0; x < dim; x++) {\n            for (var y = 0; y < dim; y++) {\n                var element = world.elements[x][y];\n                if (element) {\n                    switch (element.type) {\n                        case __WEBPACK_IMPORTED_MODULE_1__element__[\"a\" /* ElementType */].BARRIER:\n                            outBuffer[i++] = gray;\n                            break;\n                        case __WEBPACK_IMPORTED_MODULE_1__element__[\"a\" /* ElementType */].FOOD:\n                            outBuffer[i++] = element.organism ? green : darkgreen;\n                            break;\n                        case __WEBPACK_IMPORTED_MODULE_1__element__[\"a\" /* ElementType */].ORGANISM:\n                            outBuffer[i++] = element.organism.colorRGBA;\n                            break;\n                    }\n                }\n                else {\n                    outBuffer[i++] = black;\n                }\n            }\n        }\n    };\n    WorldRenderData.prototype.determineTopTenList = function (world) {\n        var genomesToCounts = {};\n        var organism = world.headOrganism;\n        while (organism) {\n            var genome = organism.genome;\n            if (genomesToCounts.hasOwnProperty(genome)) {\n                ++genomesToCounts[genome].count;\n            }\n            else {\n                genomesToCounts[genome] = {\n                    genome: genome,\n                    count: 1,\n                    color: new __WEBPACK_IMPORTED_MODULE_0__color__[\"a\" /* Color */](organism.colorRGBA).getAsCSS()\n                };\n            }\n            organism = organism.next;\n        }\n        var sortedArray = [];\n        for (var key in genomesToCounts) {\n            sortedArray.push(genomesToCounts[key]);\n        }\n        sortedArray.sort(function (a, b) {\n            return b.count - a.count;\n        });\n        this.topTenList = sortedArray.slice(0, 10);\n        while (this.topTenList.length < 10) {\n            this.topTenList.push({\n                genome: ' - ',\n                count: ' ',\n                color: 'white'\n            });\n        }\n    };\n    WorldRenderData.prototype.getTransferableData = function () {\n        var result = [];\n        result.push(this.pixels);\n        return result;\n    };\n    return WorldRenderData;\n}());\n//} \n//# sourceMappingURL=/Users/sschafer/projhome/presto-evolution/src/world-render-data.js.map\n\n/***/ },\n\n/***/ 302:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return Color; });\n//module LibSim {\nvar Color = (function () {\n    function Color(r, g, b, a) {\n        if (g === void 0) { g = null; }\n        if (b === void 0) { b = null; }\n        if (a === void 0) { a = 255; }\n        this._r = 0;\n        this._g = 0;\n        this._b = 0;\n        this._a = 0;\n        this._rgba = 0;\n        if (g === null) {\n            if (Color.isLittleEndian) {\n                this._b = (r >> 16) & 0xff;\n                this._g = (r >> 8) & 0xff;\n                this._r = (r) & 0xff;\n                this._a = 255;\n            }\n            else {\n                this._a = (r >> 16) & 0xff;\n                this._r = (r >> 8) & 0xff;\n                this._g = (r) & 0xff;\n                this._b = 255;\n            }\n            this._rgba = r;\n            return;\n        }\n        else {\n            this._r = r;\n            this._g = g;\n            this._b = b;\n            this._a = a;\n        }\n        if (Color.isLittleEndian) {\n            this._rgba = this._a << 24 | this._b << 16 | this._g << 8 | this._r;\n        }\n        else {\n            this._rgba = this._r << 24 | this._g << 16 | this._b << 8 | this._a;\n        }\n    }\n    Object.defineProperty(Color.prototype, \"r\", {\n        get: function () {\n            return this._r;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Color.prototype, \"g\", {\n        get: function () {\n            return this._g;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Color.prototype, \"b\", {\n        get: function () {\n            return this._b;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Color.prototype, \"rgba\", {\n        get: function () {\n            return this._rgba;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Color.prototype.getAsCSS = function () {\n        return \"rgba(\" + this._r + \",\" + this._g + \",\" + this._b + \",\" + this._a + \")\";\n    };\n    Color.isLittleEndian = (function () {\n        var buf = new ArrayBuffer(4);\n        var data32 = new Uint32Array(buf);\n        var data8 = new Uint8Array(buf);\n        // Determine whether Uint32 is little- or big-endian.\n        data32[0] = 0x0a0b0c0d;\n        var isLittleEndian = true;\n        if (data8[0] === 0x0a && data8[1] === 0x0b && data8[2] === 0x0c && data8[3] === 0x0d) {\n            return false;\n        }\n        return true;\n    })();\n    return Color;\n}());\n//} \n//# sourceMappingURL=/Users/sschafer/projhome/presto-evolution/src/color.js.map\n\n/***/ },\n\n/***/ 303:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return Point; });\n//module LibSim {\nvar Point = (function () {\n    function Point(x, y) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        this.x = x;\n        this.y = y;\n    }\n    Point.prototype.add = function (point) {\n        return new Point(this.x + point.x, this.y + point.y);\n    };\n    Point.prototype.randomize = function (size) {\n        this.x = Math.floor(size * Math.random());\n        this.y = Math.floor(size * Math.random());\n    };\n    return Point;\n}());\n//} \n//# sourceMappingURL=/Users/sschafer/projhome/presto-evolution/src/point.js.map\n\n/***/ },\n\n/***/ 304:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return Utils; });\n//module LibSim {\nvar Utils = (function () {\n    function Utils() {\n    }\n    Utils.randRangeInt = function (min, max) {\n        return Math.floor(min + (max - min + 1) * Math.random());\n    };\n    return Utils;\n}());\n//} \n//# sourceMappingURL=/Users/sschafer/projhome/presto-evolution/src/utils.js.map\n\n/***/ },\n\n/***/ 305:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__world__ = __webpack_require__(477);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__world_parameters__ = __webpack_require__(97);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__world_render_data__ = __webpack_require__(203);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return WorldRunner; });\n\n\n\n//module LibSim {\n//import { WebWorkerService } from './angular2-web-worker-ext/web-worker.service';\n/**\n * A transfer object that is sent from the worker thread to the main rendering thread instructing it what to render.\n */\nvar WorldRunner = (function () {\n    //declare type RenderDataHandler = (myArgument: WorldRenderData) => void;\n    function WorldRunner(params) {\n        if (params === void 0) { params = null; }\n        if (!params) {\n            params = new __WEBPACK_IMPORTED_MODULE_1__world_parameters__[\"a\" /* WorldParameters */]();\n        }\n        this.params = params;\n        this.world = new __WEBPACK_IMPORTED_MODULE_0__world__[\"a\" /* World */](params);\n        /*\n          // TODO: use a web worker thread\n          var worker:Worker = this.createThread();\n          window.setInterval(function() {\n            worker.postMessage('interval');\n          }, 1000);\n          */\n    }\n    WorldRunner.prototype.run = function (callback) {\n        var lastRenderMS = 0;\n        var lastTopTenSurveyMS = 0;\n        var self = this;\n        function turnCrank() {\n            self.world.turnCrank();\n            // send a render \"event\"\n            var curTime = new Date().getTime();\n            var elapsedRenderTime = curTime - lastRenderMS;\n            var elaspedTopTenSurvey = curTime - lastTopTenSurveyMS;\n            var surveyTopTen = elaspedTopTenSurvey > WorldRunner.MIN_SURVEY_MS;\n            if (elapsedRenderTime > WorldRunner.MIN_RENDER_MS) {\n                lastRenderMS = curTime;\n                if (surveyTopTen) {\n                    lastTopTenSurveyMS = curTime;\n                }\n                var renderData = new __WEBPACK_IMPORTED_MODULE_2__world_render_data__[\"a\" /* WorldRenderData */](self.world, surveyTopTen);\n                callback(renderData);\n            }\n        }\n        window.setInterval(turnCrank, 0);\n    };\n    WorldRunner.workerThreadFunction = function () {\n        var world = new __WEBPACK_IMPORTED_MODULE_0__world__[\"a\" /* World */](new __WEBPACK_IMPORTED_MODULE_1__world_parameters__[\"a\" /* WorldParameters */]());\n        var self = this;\n        self.postMessage('starting up');\n        var worldRunner = new WorldRunner();\n        self.addEventListener('message', function (e) {\n            self.postMessage('got message: ' + e.data);\n            world.turnCrank();\n        });\n    };\n    WorldRunner.prototype.setObstacles = function (obstacles) {\n        this.world.setObstacles(obstacles);\n    };\n    WorldRunner.prototype.reset = function () {\n        this.world.reset();\n    };\n    WorldRunner.prototype.insert = function (genome) {\n        this.world.insert(genome);\n    };\n    WorldRunner.MIN_RENDER_MS = 16;\n    WorldRunner.MIN_SURVEY_MS = 100;\n    return WorldRunner;\n}());\n//} \n//# sourceMappingURL=/Users/sschafer/projhome/presto-evolution/src/world-runner.js.map\n\n/***/ },\n\n/***/ 356:\n/***/ function(module, exports) {\n\nfunction webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 356;\n\n\n/***/ },\n\n/***/ 357:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__polyfills_ts__ = __webpack_require__(473);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__polyfills_ts___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__polyfills_ts__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser_dynamic__ = __webpack_require__(447);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_environment__ = __webpack_require__(472);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__app_app_module__ = __webpack_require__(468);\n\n\n\n\n\nif (__WEBPACK_IMPORTED_MODULE_3__environments_environment__[\"a\" /* environment */].production) {\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__angular_core__[\"enableProdMode\"])();\n}\n__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_platform_browser_dynamic__[\"a\" /* platformBrowserDynamic */])().bootstrapModule(__WEBPACK_IMPORTED_MODULE_4__app_app_module__[\"a\" /* AppModule */]);\n//# sourceMappingURL=/Users/sschafer/projhome/presto-evolution/src/main.js.map\n\n/***/ },\n\n/***/ 467:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_angular2_materialize__ = __webpack_require__(306);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_angular2_materialize___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_angular2_materialize__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__web_worker_web_worker_service__ = __webpack_require__(469);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__simulation_lib_module__ = __webpack_require__(475);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return AppComponent; });\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n\n\nvar AppComponent = (function () {\n    function AppComponent(elementRef, _webWorkerService) {\n        this.elementRef = elementRef;\n        this._webWorkerService = _webWorkerService;\n        this.modalActions = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        this.obstacles = 0;\n        this.allInstructions = [];\n        var useWebWorker = false;\n        this.params = new __WEBPACK_IMPORTED_MODULE_3__simulation_lib_module__[\"a\" /* WorldParameters */]();\n        this.worldRunner = new __WEBPACK_IMPORTED_MODULE_3__simulation_lib_module__[\"b\" /* WorldRunner */](this.params);\n        this.allInstructions = __WEBPACK_IMPORTED_MODULE_3__simulation_lib_module__[\"c\" /* InstructionsAll */].all;\n        //var x = require('LibSim');\n        if (useWebWorker) {\n            // eventually get this working.\n            var promise = this._webWorkerService.run(function () {\n                /*\n                        var someMod = require('someModule');\n          \n                        var self = this;\n                        self.postMessage('starting up');\n          \n                        var worldRunner: WorldRunner = new WorldRunner();\n                        self.addEventListener('message', function(e) {\n                          self.postMessage('got message: ' + e.data);\n                          worldRunner.world.turnCrank();\n                        });\n                        */\n            });\n            this.worker = this._webWorkerService.getWorker(promise);\n            this.worker.onmessage = function (e) {\n                console.log('Message received from worker: ' + e.data);\n            };\n            var x = 0;\n            var self = this;\n            setInterval(function () {\n                self.worker.postMessage([('hey there, worker #' + (++x))]);\n            }, 1000);\n        }\n        else {\n            var self = this;\n            this.worldRunner.run(function (renderData) {\n                self.renderPixels = renderData.getTransferableData();\n                if (renderData.topTenList) {\n                    // the following line allows for stopping the update of the list, useful for tweaking the styling in the browser:\n                    //    if (self.topTen && self.topTen[9].genome) {} else\n                    self.topTen = renderData.topTenList;\n                }\n            });\n        }\n    }\n    AppComponent.prototype.ngOnInit = function () {\n        //toast(\"...and Materialize works as well!\");\n        var elem = $(this.elementRef.nativeElement);\n        elem.find(\".collapsible-header\").addClass(\"active\");\n        elem.find(\".collapsible\").collapsible({ accordion: false });\n        this.openAbout();\n    };\n    AppComponent.prototype.onObstacleChange = function (val) {\n        this.worldRunner.setObstacles(val);\n    };\n    AppComponent.prototype.resetWorld = function () {\n        this.worldRunner.reset();\n        this.worldRunner.setObstacles(this.obstacles);\n    };\n    AppComponent.prototype.insert = function (genome) {\n        if (!genome) {\n            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_angular2_materialize__[\"toast\"])('Enter one or more instructions first.', 2000);\n            return;\n        }\n        var allCodes = \"\";\n        this.allInstructions.forEach(function (instruction) {\n            allCodes += instruction.code;\n        });\n        for (var i = 0; i < genome.length; i++) {\n            if (allCodes.indexOf(genome[i]) == -1) {\n                __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_angular2_materialize__[\"toast\"])('\"' + genome[i] + '\" is not a valid instruction.', 2000);\n                return;\n            }\n        }\n        this.worldRunner.insert(genome);\n    };\n    AppComponent.prototype.openAbout = function () {\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    };\n    AppComponent.prototype.closeAbout = function () {\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    };\n    AppComponent = __decorate([\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"])({\n            selector: 'app-root',\n            template: __webpack_require__(636),\n            styles: [__webpack_require__(634)],\n            providers: [__WEBPACK_IMPORTED_MODULE_2__web_worker_web_worker_service__[\"a\" /* WebWorkerService */]]\n        }), \n        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__web_worker_web_worker_service__[\"a\" /* WebWorkerService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__web_worker_web_worker_service__[\"a\" /* WebWorkerService */]) === 'function' && _b) || Object])\n    ], AppComponent);\n    return AppComponent;\n    var _a, _b;\n}());\n//# sourceMappingURL=/Users/sschafer/projhome/presto-evolution/src/app.component.js.map\n\n/***/ },\n\n/***/ 468:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_platform_browser__ = __webpack_require__(194);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(437);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_http__ = __webpack_require__(443);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_angular2_materialize__ = __webpack_require__(306);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_angular2_materialize___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_angular2_materialize__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__app_component__ = __webpack_require__(467);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__world_view_world_view_component__ = __webpack_require__(471);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return AppModule; });\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n\n\n\n\n\nvar AppModule = (function () {\n    function AppModule() {\n    }\n    AppModule = __decorate([\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"NgModule\"])({\n            declarations: [\n                __WEBPACK_IMPORTED_MODULE_5__app_component__[\"a\" /* AppComponent */],\n                __WEBPACK_IMPORTED_MODULE_6__world_view_world_view_component__[\"a\" /* WorldViewComponent */]\n            ],\n            imports: [\n                __WEBPACK_IMPORTED_MODULE_0__angular_platform_browser__[\"b\" /* BrowserModule */],\n                __WEBPACK_IMPORTED_MODULE_2__angular_forms__[\"a\" /* FormsModule */],\n                __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"a\" /* HttpModule */],\n                __WEBPACK_IMPORTED_MODULE_4_angular2_materialize__[\"MaterializeModule\"]\n            ],\n            providers: [],\n            bootstrap: [__WEBPACK_IMPORTED_MODULE_5__app_component__[\"a\" /* AppComponent */]]\n        }), \n        __metadata('design:paramtypes', [])\n    ], AppModule);\n    return AppModule;\n}());\n//# sourceMappingURL=/Users/sschafer/projhome/presto-evolution/src/app.module.js.map\n\n/***/ },\n\n/***/ 469:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__web_worker__ = __webpack_require__(470);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return WebWorkerService; });\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\nvar WebWorkerService = (function (_super) {\n    __extends(WebWorkerService, _super);\n    function WebWorkerService() {\n        _super.apply(this, arguments);\n    }\n    WebWorkerService = __decorate([\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"])(), \n        __metadata('design:paramtypes', [])\n    ], WebWorkerService);\n    return WebWorkerService;\n}(__WEBPACK_IMPORTED_MODULE_1__web_worker__[\"a\" /* WebWorkerService */]));\n//# sourceMappingURL=/Users/sschafer/projhome/presto-evolution/src/web-worker.service.js.map\n\n/***/ },\n\n/***/ 470:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return WebWorkerService; });\nvar WebWorkerService = (function () {\n    function WebWorkerService() {\n        this.workerFunctionToUrlMap = new WeakMap();\n        this.promiseToWorkerMap = new WeakMap();\n    }\n    WebWorkerService.prototype.run = function (workerFunction, data) {\n        var url = this.getOrCreateWorkerUrl(workerFunction);\n        return this.runUrl(url, data);\n    };\n    WebWorkerService.prototype.runUrl = function (url, data) {\n        var worker = new Worker(url);\n        var promise = this.createPromiseForWorker(worker, data);\n        var promiseCleaner = this.createPromiseCleaner(promise);\n        this.promiseToWorkerMap.set(promise, worker);\n        /*\n        promise\n            .then(promiseCleaner)\n            .catch(promiseCleaner);\n            */\n        return promise;\n    };\n    WebWorkerService.prototype.getWorker = function (promise) {\n        return this.promiseToWorkerMap.get(promise);\n    };\n    WebWorkerService.prototype.terminate = function (promise) {\n        debugger;\n        return this.removePromise(promise);\n    };\n    WebWorkerService.prototype.createPromiseForWorker = function (worker, data) {\n        return new Promise(function (resolve, reject) {\n            worker.addEventListener('message', function (event) { return resolve(event.data); });\n            worker.addEventListener('error', reject);\n            worker.postMessage(data);\n        });\n    };\n    WebWorkerService.prototype.getOrCreateWorkerUrl = function (fn) {\n        if (!this.workerFunctionToUrlMap.has(fn)) {\n            var url = this.createWorkerUrl(fn);\n            this.workerFunctionToUrlMap.set(fn, url);\n            return url;\n        }\n        return this.workerFunctionToUrlMap.get(fn);\n    };\n    WebWorkerService.prototype.createWorkerUrl = function (resolve) {\n        debugger;\n        var resolveString = resolve.toString();\n        var webWorkerTemplate = '(' + resolveString + ')();'; //resolveString.replace('function(){', '');\n        //webWorkerTemplate = webWorkerTemplate.substr(0, webWorkerTemplate.length - 1);\n        //const webWorkerTemplate =  '(function(){' + resolveString + '})()';\n        /*\n        `\n            self.addEventListener('message', function(e) {\n                postMessage((${resolveString})(e.data));\n            });\n        `\n        */\n        /*\n                `\n                    self.addEventListener('message', function(e) {\n                        (${resolveString}(e.data));\n                    });\n                `\n        */\n        ;\n        var blob = new Blob([webWorkerTemplate], { type: 'text/javascript' });\n        return URL.createObjectURL(blob);\n    };\n    WebWorkerService.prototype.createPromiseCleaner = function (promise) {\n        var _this = this;\n        return function (event) {\n            _this.removePromise(promise);\n            return event;\n        };\n    };\n    WebWorkerService.prototype.removePromise = function (promise) {\n        var worker = this.promiseToWorkerMap.get(promise);\n        if (worker) {\n            worker.terminate();\n        }\n        this.promiseToWorkerMap.delete(promise);\n        return promise;\n    };\n    return WebWorkerService;\n}());\n//# sourceMappingURL=/Users/sschafer/projhome/presto-evolution/src/web-worker.js.map\n\n/***/ },\n\n/***/ 471:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return WorldViewComponent; });\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar WorldViewComponent = (function () {\n    function WorldViewComponent(elementRef) {\n        this.elementRef = elementRef;\n        this.lastWidth = 0;\n        this.lastHeight = 0;\n        this.magnification = 5;\n        this.magnificationSize = 20;\n        this.magnificationX = 128;\n        this.magnificationY = 128;\n        this.mouseDown = false;\n    }\n    WorldViewComponent.prototype.ngOnInit = function () {\n        this.canvasOffScreen = $(this.elementRef.nativeElement).find('.off-screen-canvas')[0];\n        this.canvasOnScreen = $(this.elementRef.nativeElement).find('.on-screen-canvas')[0];\n        /*\n         const mouseDown$ = Observable.fromEvent(canvasNE, 'mousedown');\n              const mouseMove$ = Observable.fromEvent(canvasNE, 'mousemove');\n              const mouseUp$ = Observable.fromEvent(canvasNE, 'mouseup');\n        \n              const moveUntilMouseUp$= mouseMove$.takeUntil(mouseUp$);\n              const startRotate$ = mouseDown$.switchMapTo(moveUntilMouseUp$.startWith(null));\n        \n              const relativePoint = (start: MouseEvent, end: MouseEvent): {x:number, y:number} =>\n              (start && end && {\n                dx: start.clientX - end.clientX,\n                dy: start.clientY - end.clientY,\n                start: start\n              } || {});\n        \n              this.relativeTo$ = startRotate$\n                .combineLatest(mouseDown$)\n                .map(arr => relativePoint(arr[0],arr[1]));\n        \n              this.rotateToAngle$ = this.relativeTo$\n                .map((tr) => ({angle: Math.atan2(tr.dy, tr.dx), start: tr.start}));\n                */\n    };\n    WorldViewComponent.prototype.clicked = function (event) {\n        var size = $(this.canvasOnScreen).width();\n        this.magnificationX = 256 * event.clientX / size;\n        this.magnificationY = 256 * event.clientY / size;\n        event.preventDefault();\n    };\n    WorldViewComponent.prototype.mousedown = function (event) {\n        this.mouseDown = true;\n        this.clicked(event);\n    };\n    WorldViewComponent.prototype.mousemove = function (event) {\n        if (this.mouseDown) {\n            this.clicked(event);\n        }\n    };\n    WorldViewComponent.prototype.mouseup = function (event) {\n        this.mouseDown = false;\n    };\n    WorldViewComponent.prototype.ngOnChanges = function (changes) {\n        if (this.elementRef) {\n            this.updatePixels();\n        }\n    };\n    /**\n     * Resize the canvas to fit the parent container, if necessary\n     */\n    WorldViewComponent.prototype.ngDoCheck = function () {\n        if (!this.canvasOffScreen) {\n        }\n        if (!this.canvasOnScreen) {\n        }\n        var parent = $(this.elementRef.nativeElement).parent();\n        // because every application needs some ugly magic numbers in it:\n        var w = parent.width() - 20;\n        var h = parent.height() - 20;\n        // (without that adjustment, things vibrate in a funky way and cause seizures)\n        if (w != this.lastWidth || h != this.lastHeight) {\n            this.lastWidth = w;\n            this.lastHeight = h;\n        }\n        var dim = Math.min(w, h);\n        $(this.canvasOnScreen).css({ width: (dim + 'px'), height: (dim + 'px') });\n        $(this.canvasOffScreen).css({ width: (dim + 'px'), height: (dim + 'px') });\n    };\n    /**\n     * Copy from the pixels buffer to the canvas\n     */\n    WorldViewComponent.prototype.updatePixels = function () {\n        if (this.pixels && this.pixels.length) {\n            var inBuffer = this.pixels[0];\n            var canvas = this.canvasOffScreen;\n            if (canvas) {\n                var ctx = canvas.getContext('2d');\n                var dim = this.worldSize; //Math.sqrt(inBuffer.byteLength/4);\n                var imageData = ctx.createImageData(dim, dim);\n                var test = true;\n                if (test) {\n                    var buf8 = new Uint8ClampedArray(inBuffer);\n                    imageData.data.set(buf8);\n                }\n                else {\n                    var iOut = 0;\n                    for (var iIn = 0; iIn < inBuffer.byteLength; iIn++) {\n                        imageData.data[iOut++] = inBuffer[iIn];\n                    }\n                }\n                ctx.putImageData(imageData, 0, 0);\n                ctx.webkitImageSmoothingEnabled = false;\n                ctx.mozImageSmoothingEnabled = ctx.msImageSmoothingEnabled = ctx.webkitImageSmoothingEnabled =\n                    ctx.imageSmoothingEnabled = false;\n                if (this.magnification > 1) {\n                    var srcX = this.magnificationX - this.magnificationSize / 2;\n                    var srcY = this.magnificationY - this.magnificationSize / 2;\n                    var destX = this.magnificationX - this.magnificationSize / 2 * this.magnification;\n                    var destY = this.magnificationY - this.magnificationSize / 2 * this.magnification;\n                    var destSize = this.magnification * this.magnificationSize;\n                    ctx.drawImage(canvas, srcX, srcY, this.magnificationSize, this.magnificationSize, destX, destY, destSize, destSize);\n                    ctx.strokeStyle = '#ffffff';\n                    ctx.lineWidth = 2;\n                    ctx.strokeRect(destX, destY, destSize, destSize);\n                }\n            }\n            this.canvasOnScreen.getContext('2d').drawImage(canvas, 0, 0, 256, 256, 0, 0, 256, 256);\n        }\n    };\n    WorldViewComponent = __decorate([\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"])({\n            selector: 'app-world-view',\n            template: __webpack_require__(637),\n            styles: [__webpack_require__(635)],\n            inputs: ['pixels', 'worldSize']\n        }), \n        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"]) === 'function' && _a) || Object])\n    ], WorldViewComponent);\n    return WorldViewComponent;\n    var _a;\n}());\n//# sourceMappingURL=/Users/sschafer/projhome/presto-evolution/src/world-view.component.js.map\n\n/***/ },\n\n/***/ 472:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return environment; });\nvar environment = {\n    production: true\n};\n//# sourceMappingURL=/Users/sschafer/projhome/presto-evolution/src/environment.prod.js.map\n\n/***/ },\n\n/***/ 473:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_core_js_es6_symbol__ = __webpack_require__(493);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_core_js_es6_symbol___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_core_js_es6_symbol__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_core_js_es6_object__ = __webpack_require__(486);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_core_js_es6_object___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_core_js_es6_object__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_core_js_es6_function__ = __webpack_require__(482);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_core_js_es6_function___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_core_js_es6_function__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_core_js_es6_parse_int__ = __webpack_require__(488);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_core_js_es6_parse_int___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_core_js_es6_parse_int__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_core_js_es6_parse_float__ = __webpack_require__(487);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_core_js_es6_parse_float___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_core_js_es6_parse_float__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_core_js_es6_number__ = __webpack_require__(485);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_core_js_es6_number___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_core_js_es6_number__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_core_js_es6_math__ = __webpack_require__(484);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_core_js_es6_math___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_core_js_es6_math__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_core_js_es6_string__ = __webpack_require__(492);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_core_js_es6_string___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_core_js_es6_string__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_core_js_es6_date__ = __webpack_require__(481);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_core_js_es6_date___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_core_js_es6_date__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_core_js_es6_array__ = __webpack_require__(480);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_core_js_es6_array___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_core_js_es6_array__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_core_js_es6_regexp__ = __webpack_require__(490);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_core_js_es6_regexp___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_core_js_es6_regexp__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_core_js_es6_map__ = __webpack_require__(483);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_core_js_es6_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_core_js_es6_map__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_core_js_es6_set__ = __webpack_require__(491);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_core_js_es6_set___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_12_core_js_es6_set__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_core_js_es6_reflect__ = __webpack_require__(489);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_core_js_es6_reflect___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_13_core_js_es6_reflect__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_core_js_es7_reflect__ = __webpack_require__(494);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_core_js_es7_reflect___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_14_core_js_es7_reflect__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_zone_js_dist_zone__ = __webpack_require__(664);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_zone_js_dist_zone___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_15_zone_js_dist_zone__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=/Users/sschafer/projhome/presto-evolution/src/polyfills.js.map\n\n/***/ },\n\n/***/ 474:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__color__ = __webpack_require__(302);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return GenomeColorMap; });\n/// <reference path='color.ts'/>\n\n//namespace LibSim {\nvar GenomeColorMap = (function () {\n    function GenomeColorMap() {\n    }\n    GenomeColorMap.getColorForGenome = function (genome) {\n        var result = GenomeColorMap._genomeColorMap[genome];\n        if (!result) {\n            result = GenomeColorMap.colors[GenomeColorMap.colorIndex];\n            GenomeColorMap._genomeColorMap[genome] = result;\n            GenomeColorMap.colorIndex = (GenomeColorMap.colorIndex + 1) % GenomeColorMap.colors.length;\n        }\n        return result;\n    };\n    GenomeColorMap.colorIndex = 0;\n    GenomeColorMap.colors = [\n        /*RED\"*/ new __WEBPACK_IMPORTED_MODULE_0__color__[\"a\" /* Color */](0xFF, 0x00, 0x00),\n        /*BLUE\"*/ new __WEBPACK_IMPORTED_MODULE_0__color__[\"a\" /* Color */](0x00, 0x00, 0xFF),\n        /*LIGHT_BLUE\" */ new __WEBPACK_IMPORTED_MODULE_0__color__[\"a\" /* Color */](0x80, 0x80, 0xFF),\n        /*PINK\"*/ new __WEBPACK_IMPORTED_MODULE_0__color__[\"a\" /* Color */](0xFF, 0x00, 0xFF),\n        /*MAROON\"*/ new __WEBPACK_IMPORTED_MODULE_0__color__[\"a\" /* Color */](0x80, 0x00, 0x00),\n        /*BROWN\"*/ new __WEBPACK_IMPORTED_MODULE_0__color__[\"a\" /* Color */](110, 50, 20),\n        /*OLIVE\"*/ new __WEBPACK_IMPORTED_MODULE_0__color__[\"a\" /* Color */](0x80, 0x80, 0x00),\n        /*NAVY\"*/ new __WEBPACK_IMPORTED_MODULE_0__color__[\"a\" /* Color */](0x00, 0x00, 0x80),\n        /*PURPLE\"*/ new __WEBPACK_IMPORTED_MODULE_0__color__[\"a\" /* Color */](0x80, 0x00, 0x80),\n        /*TEAL\"*/ new __WEBPACK_IMPORTED_MODULE_0__color__[\"a\" /* Color */](0x00, 0x80, 0x80),\n        /*GRAY\"*/ new __WEBPACK_IMPORTED_MODULE_0__color__[\"a\" /* Color */](0x80, 0x80, 0x80),\n        /*ORANGE\"*/ new __WEBPACK_IMPORTED_MODULE_0__color__[\"a\" /* Color */](0xFF, 0x80, 0x00),\n        /*SKY\"*/ new __WEBPACK_IMPORTED_MODULE_0__color__[\"a\" /* Color */](93, 186, 202),\n        /*GLASS\"*/ new __WEBPACK_IMPORTED_MODULE_0__color__[\"a\" /* Color */](153, 204, 204),\n        /*MARIGOLD\"*/ new __WEBPACK_IMPORTED_MODULE_0__color__[\"a\" /* Color */](255, 175, 24),\n        /*LAVENDER\"*/ new __WEBPACK_IMPORTED_MODULE_0__color__[\"a\" /* Color */](187, 86, 195),\n        /*VIOLET\"*/ new __WEBPACK_IMPORTED_MODULE_0__color__[\"a\" /* Color */](89, 24, 187)\n    ];\n    GenomeColorMap._genomeColorMap = {\n        \"*\": new __WEBPACK_IMPORTED_MODULE_0__color__[\"a\" /* Color */](0, 255, 0)\n    };\n    return GenomeColorMap;\n}());\n//} \n//# sourceMappingURL=/Users/sschafer/projhome/presto-evolution/src/genome-color-map.js.map\n\n/***/ },\n\n/***/ 475:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__world_parameters__ = __webpack_require__(97);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__world_render_data__ = __webpack_require__(203);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__world_runner__ = __webpack_require__(305);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__instructions_all__ = __webpack_require__(202);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__instruction__ = __webpack_require__(96);\n/* unused harmony export SimulationModule */\n/* harmony namespace reexport (by used) */ __webpack_require__.d(exports, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_1__world_parameters__[\"a\"]; });\n/* unused harmony namespace reexport */\n/* harmony namespace reexport (by used) */ __webpack_require__.d(exports, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_3__world_runner__[\"a\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(exports, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_4__instructions_all__[\"a\"]; });\n/* unused harmony namespace reexport */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n\n\n\nvar SimulationModule = (function () {\n    function SimulationModule() {\n    }\n    SimulationModule = __decorate([\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"])({\n            declarations: [],\n            imports: [],\n            exports: [\n                __WEBPACK_IMPORTED_MODULE_1__world_parameters__[\"a\" /* WorldParameters */],\n                __WEBPACK_IMPORTED_MODULE_2__world_render_data__[\"a\" /* WorldRenderData */],\n                __WEBPACK_IMPORTED_MODULE_3__world_runner__[\"a\" /* WorldRunner */],\n                __WEBPACK_IMPORTED_MODULE_4__instructions_all__[\"a\" /* InstructionsAll */]\n            ]\n        }), \n        __metadata('design:paramtypes', [])\n    ], SimulationModule);\n    return SimulationModule;\n}());\n\n\n\n\n\n//# sourceMappingURL=/Users/sschafer/projhome/presto-evolution/src/lib.module.js.map\n\n/***/ },\n\n/***/ 476:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__element__ = __webpack_require__(70);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__point__ = __webpack_require__(303);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__genome_color_map__ = __webpack_require__(474);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__instruction__ = __webpack_require__(96);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__utils__ = __webpack_require__(304);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return Organism; });\n/// <reference path='point.ts'/>\n/// <reference path='world.ts'/>\n/// <reference path='element.ts'/>\n/// <reference path='instruction.ts'/>\n/// <reference path='utils.ts'/>\n/// <reference path='genome-color-map.ts'/>\n\n\n\n\n\n\n\n//module LibSim {\nvar Organism = (function () {\n    function Organism(genome, location, world) {\n        this.numExposedPhotosynthesizeCells = 0;\n        this.sleepCount = 0;\n        this.instructionsPerTurn = 1;\n        this.next = this.prev = null;\n        this.headSegment = this.tailSegment = this.activeSegment = null;\n        this.initialize(genome, location, world);\n    }\n    Organism.prototype.reset = function () {\n        // return all elements to the recycle pool\n        var element = this.headSegment;\n        while (element) {\n            var nextElement = element.next;\n            element.next = Organism.headElementInactive;\n            Organism.headElementInactive = element;\n            element = nextElement;\n            Organism.headElementInactive.reset();\n        }\n        this.headSegment = this.tailSegment = this.activeSegment = null;\n        this.next = this.prev = null;\n        this.numExposedPhotosynthesizeCells = 0;\n        this.sleepCount = 0;\n        this.instructionsPerTurn = 0;\n    };\n    Organism.prototype.initialize = function (genome, location, world) {\n        this.genome = genome;\n        for (var i = 0; i < genome.length; i++) {\n            var element = this.addSegment(genome[i], location, world, i > 0);\n        }\n        if (genome[0] === '*') {\n            this.numExposedPhotosynthesizeCells = 1;\n        }\n        this.energy = 100 * genome.length;\n        this.lifespan = world.parameters.lifespanPerSegment * genome.length;\n        var randomizationLifespace = 1 +\n            __WEBPACK_IMPORTED_MODULE_4__utils__[\"a\" /* Utils */].randRangeInt(-world.parameters.lifespanRandomizationPercent, world.parameters.lifespanRandomizationPercent) / 100;\n        this.lifespan *= randomizationLifespace;\n        this.randomizeOrientation();\n        // get the color to use to display this genome\n        this.colorRGBA = __WEBPACK_IMPORTED_MODULE_2__genome_color_map__[\"a\" /* GenomeColorMap */].getColorForGenome(genome).rgba;\n    };\n    Organism.prototype.addSegment = function (code, location, world, isOccluded) {\n        var instruction = __WEBPACK_IMPORTED_MODULE_3__instruction__[\"a\" /* Instruction */].instructionFromCode(code);\n        if (!instruction) {\n            throw \"Unknown instruction: \" + code;\n        }\n        var element;\n        var type = (code == \"*\") ? __WEBPACK_IMPORTED_MODULE_0__element__[\"a\" /* ElementType */].FOOD : __WEBPACK_IMPORTED_MODULE_0__element__[\"a\" /* ElementType */].ORGANISM;\n        if (Organism.headElementInactive) {\n            element = Organism.headElementInactive;\n            Organism.headElementInactive = Organism.headElementInactive.next;\n            element.initialize(type, this);\n        }\n        else {\n            element = new __WEBPACK_IMPORTED_MODULE_0__element__[\"b\" /* Element */](type, this);\n        }\n        element.isOccluded = isOccluded;\n        element.instruction = instruction;\n        if (!this.headSegment) {\n            this.headSegment = element;\n        }\n        if (this.tailSegment) {\n            this.tailSegment.next = element;\n        }\n        this.tailSegment = element;\n        if (isOccluded) {\n            element.locationX = location.x;\n            element.locationY = location.y;\n        }\n        else {\n            world.put(location.x, location.y, element);\n        }\n        return element;\n    };\n    /**\n     * Execute the action of the current segment and make the next segment active\n     */\n    Organism.prototype.turnCrank = function (world) {\n        var count = this.instructionsPerTurn;\n        --this.lifespan;\n        if (this.numExposedPhotosynthesizeCells) {\n            this.energy += world.parameters.energyGainedFromPhotosythesizing +\n                (this.numExposedPhotosynthesizeCells - 1) * (world.parameters.energyGainedFromPhotosythesizing - world.parameters.energyTurnCost);\n        }\n        while (count--) {\n            if (this.sleepCount) {\n                --this.sleepCount;\n                ++this.lifespan;\n                continue;\n            }\n            if (!this.activeSegment) {\n                this.activeSegment = this.headSegment;\n                this.instructionsPerTurn = 1;\n            }\n            // adjust organism's energy by the instruction's impact\n            this.energy -= world.parameters.energyTurnCost;\n            // perform action\n            var result = this.activeSegment.instruction.do(this, world, this.activeSegment);\n            if (result !== __WEBPACK_IMPORTED_MODULE_3__instruction__[\"b\" /* InstructionResult */].DONT_ADVANCE) {\n                // advance to the next segment/instruction\n                if (this.activeSegment) {\n                    this.activeSegment = this.activeSegment.next;\n                }\n            }\n            if (result == __WEBPACK_IMPORTED_MODULE_3__instruction__[\"b\" /* InstructionResult */].EXECUTE_AGAIN && this.activeSegment) {\n                ++count;\n            }\n        }\n    };\n    Organism.prototype.randomizeOrientation = function () {\n        this.setOrientation(__WEBPACK_IMPORTED_MODULE_4__utils__[\"a\" /* Utils */].randRangeInt(0, 4) % 3);\n    };\n    Organism.prototype.setOrientation = function (orientation) {\n        this.headOrientation = orientation;\n        switch (orientation) {\n            default:\n                this.headDirectionX = 0;\n                this.headDirectionY = -1;\n                break;\n            case 1:\n                this.headDirectionX = 1;\n                this.headDirectionY = 0;\n                break;\n            case 2:\n                this.headDirectionX = 0;\n                this.headDirectionY = 1;\n                break;\n            case 3:\n                this.headDirectionX = -1;\n                this.headDirectionY = 0;\n                break;\n        }\n    };\n    Organism.prototype.move = function (world, andEat) {\n        this.wasBlocked = false;\n        this.energy -= andEat ? world.parameters.energyMoveAndEatCost : world.parameters.energyMoveCost;\n        //var worldSize:number = world.parameters.size;\n        var destinationX = (this.headSegment.locationX + this.headDirectionX) & 255;\n        var destinationY = (this.headSegment.locationY + this.headDirectionY) & 255;\n        var elementAtDestination = world.get(destinationX, destinationY);\n        if (elementAtDestination == null) {\n            // there was nothing in the way, so move\n            var element = this.headSegment;\n            var index = 0;\n            while (element) {\n                var lastX = element.locationX;\n                var lastY = element.locationY;\n                world.put(destinationX, destinationY, element);\n                if (element.isOccluded) {\n                    if (element.instruction.code === '*') {\n                        ++this.numExposedPhotosynthesizeCells;\n                    }\n                    element.isOccluded = false;\n                    break;\n                }\n                destinationX = lastX;\n                destinationY = lastY;\n                element = element.next;\n                if (!element) {\n                    world.put(destinationX, destinationY, null);\n                }\n            }\n        }\n        else {\n            this.wasBlocked = true;\n            if (andEat && elementAtDestination.organism != this) {\n                switch (elementAtDestination.type) {\n                    case __WEBPACK_IMPORTED_MODULE_0__element__[\"a\" /* ElementType */].FOOD:\n                        this.wasBlocked = false;\n                        if (elementAtDestination.organism) {\n                            var energyGain = Math.max(0 /*world.parameters.lifespanPerSegment*/, Math.min(elementAtDestination.organism.energy, world.parameters.biteStrength));\n                            this.energy += energyGain * world.parameters.digestionEfficiency / 100;\n                            elementAtDestination.organism.energy -= world.parameters.biteStrength;\n                            if (elementAtDestination.organism.energy < 0) {\n                                world.killOrganism(elementAtDestination.organism, true);\n                            }\n                        }\n                        else {\n                            this.energy += world.parameters.biteStrength;\n                            world.put(destinationX, destinationY, null);\n                        }\n                        break;\n                    case __WEBPACK_IMPORTED_MODULE_0__element__[\"a\" /* ElementType */].ORGANISM:\n                        /*\n                            if (elementAtDestination.organism != this) {\n                                this.energy += world.parameters.energyGainedFromEating;\n                                elementAtDestination.organism.energy -= world.parameters.energyGainedFromEating;;\n                            }\n                            */\n                        break;\n                }\n            }\n        }\n        // validate\n        var validateOrganismAfterMove = false; //true;\n        var validateBoardAfterMove = false;\n        var locationMap = {};\n        if (validateOrganismAfterMove) {\n            var element = this.headSegment;\n            var index = 0;\n            while (element) {\n                var key = element.locationX + ',' + element.locationY;\n                locationMap[key] = true;\n                if (!element.isOccluded) {\n                    if (world.get(element.locationX, element.locationY).organism != this) {\n                        debugger;\n                    }\n                }\n                if (!element.next && element != this.tailSegment) {\n                    debugger;\n                }\n                element = element.next;\n            }\n        }\n        if (validateBoardAfterMove) {\n            for (var x = 0; x < 256; x++) {\n                for (var y = 0; y < 256; y++) {\n                    element = world.get(x, y);\n                    if (element && element.organism == this) {\n                        var key = x + ',' + y;\n                        if (!locationMap[key]) {\n                            debugger;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    Organism.prototype.testIfFacing = function (elementType, world, distance) {\n        if (distance === void 0) { distance = 10; }\n        var locationX = this.headSegment.locationX;\n        var locationY = this.headSegment.locationY;\n        var photosynthesizeInstruction = __WEBPACK_IMPORTED_MODULE_3__instruction__[\"a\" /* Instruction */].instructionFromCode('*');\n        //var worldSize:number = world.parameters.size;\n        while (distance--) {\n            locationX = (locationX + this.headDirectionX) & 255; // wrap\n            locationY = (locationY + this.headDirectionY) & 255;\n            var element = world.get(locationX, locationY);\n            if (element) {\n                if (element.organism == this) {\n                    return false; // we saw ourselves, so no\n                }\n                if (element.type == elementType) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    Organism.prototype.doNotIf = function () {\n        //this.energy += 1;\n        // for now, just skip an instruction\n        if (this.activeSegment) {\n            var next = this.activeSegment.next;\n            // search for Else instruction\n            var testNext = this.activeSegment.next;\n            while (testNext) {\n                if (testNext.instruction.code == 'e') {\n                    next = testNext;\n                    break;\n                }\n                testNext = testNext.next;\n            }\n            this.activeSegment = next;\n            if (this.activeSegment) {\n                this.activeSegment = this.activeSegment.next;\n            }\n        }\n    };\n    Organism.prototype.getSpawnEnergy = function (world) {\n        return world.parameters.spawnEnergyPerSegment * this.genome.length;\n    };\n    Organism.prototype.spawnIfAble = function (world) {\n        if (this.energy < this.getSpawnEnergy(world)) {\n            return;\n        }\n        // start with a copy of the parent's genome\n        var genome = this.genome;\n        // possibly mutate the genome of the offspring\n        var mutationChance = __WEBPACK_IMPORTED_MODULE_4__utils__[\"a\" /* Utils */].randRangeInt(0, 100);\n        if (mutationChance < world.parameters.mutationRate) {\n            genome = this.mutateGenome(genome);\n        }\n        // create the child just behind the tail\n        //var worldSize:number = world.parameters.size;\n        var locationX = (this.tailSegment.locationX - this.headDirectionX) & 255;\n        var locationY = (this.tailSegment.locationY - this.headDirectionY) & 255;\n        if (world.get(locationX, locationY) != null) {\n            for (var dx = -1; dx <= 1; dx++) {\n                for (var dy = -1; dy <= 1; dy++) {\n                    var nx = (this.tailSegment.locationX + dx) & 255;\n                    var ny = (this.tailSegment.locationY + dy) & 255;\n                    if (dx && dy && world.get(nx, ny) == null) {\n                        locationX = nx;\n                        locationY = ny;\n                        dx = 10;\n                        break;\n                    }\n                }\n            }\n        }\n        if (world.get(locationX, locationY) == null) {\n            var child = new Organism(genome, new __WEBPACK_IMPORTED_MODULE_1__point__[\"a\" /* Point */](locationX, locationY), world);\n            // divide the energy between the parent and the child\n            this.energy = child.energy = this.energy / 2;\n            world.addOrganism(child);\n        }\n        else {\n        }\n    };\n    Organism.prototype.mutateGenome = function (genome) {\n        // 0 = random insertion\n        // 1 = random deletion\n        // 2 = random change of existing instruction\n        // 3 = random swapping of two adjacent instructions\n        var mutationType = __WEBPACK_IMPORTED_MODULE_4__utils__[\"a\" /* Utils */].randRangeInt(0, 3);\n        var allInstructions = __WEBPACK_IMPORTED_MODULE_3__instruction__[\"a\" /* Instruction */].allCodes;\n        var newGenome = '';\n        switch (mutationType) {\n            case 0:\n                // copy the genome, randomly inserting one instruction\n                var whereIndex = __WEBPACK_IMPORTED_MODULE_4__utils__[\"a\" /* Utils */].randRangeInt(0, genome.length);\n                for (var i = 0; i <= genome.length; i++) {\n                    if (i == whereIndex) {\n                        newGenome += allInstructions[__WEBPACK_IMPORTED_MODULE_4__utils__[\"a\" /* Utils */].randRangeInt(0, allInstructions.length - 1)];\n                    }\n                    if (i < genome.length) {\n                        newGenome += genome[i];\n                    }\n                }\n                break;\n            case 1:\n                // randomly remove one instruction (if there's more than one to begin with)\n                if (genome.length == 1) {\n                    newGenome = genome;\n                }\n                else {\n                    var whereIndex = __WEBPACK_IMPORTED_MODULE_4__utils__[\"a\" /* Utils */].randRangeInt(0, genome.length - 1);\n                    for (var i = 0; i < genome.length; i++) {\n                        if (i != whereIndex) {\n                            newGenome += genome[i];\n                        }\n                    }\n                }\n                break;\n            case 2:\n                // randomly change an existing instruction\n                var whereIndex = __WEBPACK_IMPORTED_MODULE_4__utils__[\"a\" /* Utils */].randRangeInt(0, genome.length - 1);\n                for (var i = 0; i < genome.length; i++) {\n                    if (i == whereIndex) {\n                        newGenome += allInstructions[__WEBPACK_IMPORTED_MODULE_4__utils__[\"a\" /* Utils */].randRangeInt(0, allInstructions.length - 1)];\n                    }\n                    else {\n                        newGenome += genome[i];\n                    }\n                }\n                break;\n            case 3:\n                // randomly swap two instructions\n                if (genome.length == 1) {\n                    newGenome = genome;\n                }\n                else if (genome.length == 2) {\n                    newGenome = genome[1] + genome[0];\n                }\n                else {\n                    var whereIndex = __WEBPACK_IMPORTED_MODULE_4__utils__[\"a\" /* Utils */].randRangeInt(0, genome.length - 2);\n                    for (var i = 0; i < genome.length; i++) {\n                        if (i == whereIndex) {\n                            // swap\n                            newGenome += genome[i + 1] + genome[i];\n                            ++i;\n                        }\n                        else {\n                            newGenome += genome[i];\n                        }\n                    }\n                }\n                break;\n        }\n        //return newGenome.substr(0,1);\n        return newGenome;\n    };\n    // recycle unused elements to reduce garbage collection\n    Organism.headElementInactive = null;\n    return Organism;\n}());\n//}\n//# sourceMappingURL=/Users/sschafer/projhome/presto-evolution/src/organism.js.map\n\n/***/ },\n\n/***/ 477:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__world_parameters__ = __webpack_require__(97);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__element__ = __webpack_require__(70);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__instructions_all__ = __webpack_require__(202);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__organism__ = __webpack_require__(476);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__point__ = __webpack_require__(303);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__utils__ = __webpack_require__(304);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return World; });\n\n\n\n\n\n\n\n//module LibSim {\nvar World = (function () {\n    function World(parameters) {\n        this.MAX_WORLD_SIZE = 256; //1024;\n        this.numOrganisms = 0;\n        this.turn = 1;\n        this.foodElement = new __WEBPACK_IMPORTED_MODULE_1__element__[\"b\" /* Element */](__WEBPACK_IMPORTED_MODULE_1__element__[\"a\" /* ElementType */].FOOD);\n        this.barrierElement = new __WEBPACK_IMPORTED_MODULE_1__element__[\"b\" /* Element */](__WEBPACK_IMPORTED_MODULE_1__element__[\"a\" /* ElementType */].BARRIER);\n        this.newObstacles = undefined;\n        new __WEBPACK_IMPORTED_MODULE_2__instructions_all__[\"a\" /* InstructionsAll */]();\n        this.parameters = parameters;\n        this.elements = [];\n        for (var i = 0; i < this.MAX_WORLD_SIZE; i++) {\n            this.elements.push([]);\n            for (var j = 0; j < this.MAX_WORLD_SIZE; j++) {\n                this.elements[i].push(null);\n            }\n        }\n        this.reset();\n    }\n    /**\n     * Remove all elements and organisms from the board\n     */\n    World.prototype.reset = function () {\n        for (var i = 0; i < this.MAX_WORLD_SIZE; i++) {\n            for (var j = 0; j < this.MAX_WORLD_SIZE; j++) {\n                this.elements[i][j] = null;\n            }\n        }\n        this.headOrganism = null;\n        this.headOrganismInactive = null;\n        this.numOrganisms = 0;\n        //var organism:Organism = this.createOrganism(\"M*MM\", this.getEmptyLocation());\n        for (var i = 0; i < this.parameters.initialFoodCount; i++) {\n            var location = this.getEmptyLocation();\n            var organism = this.createOrganism(\"*\", location);\n            organism.energy = __WEBPACK_IMPORTED_MODULE_5__utils__[\"a\" /* Utils */].randRangeInt(-1000, organism.getSpawnEnergy(this));\n        }\n        /*\n        organism.energy = Utils.randRangeInt(0, organism.getSpawnEnergy(this));\n\n        for (var i: number = 0; i < this.parameters.initialFoodCount; i++) {\n            var location: Point = this.getEmptyLocation();\n\n            var organism:Organism = this.createOrganism(\"M\", location);\n            organism.energy = Utils.randRangeInt(0, organism.getSpawnEnergy(this));\n        }\n        */\n    };\n    World.prototype.validate = function () {\n        var organism = this.headOrganism;\n        while (organism) {\n            var segment = organism.headSegment;\n            var lastX = segment.locationX;\n            var lastY = segment.locationY;\n            while (segment) {\n                if (segment.organism != organism) {\n                    throw \"segment organism bad\";\n                }\n                var elementAtPosition = this.elements[segment.locationX][segment.locationY];\n                if (!elementAtPosition) {\n                    throw \"`xxx`\";\n                }\n                if (elementAtPosition.organism != organism) {\n                    throw \"board is bad\";\n                }\n                if (elementAtPosition.isOccluded) {\n                    throw \"element is occluded\";\n                }\n                segment = segment.next;\n                if (segment) {\n                    if (segment.locationX == lastX && segment.locationY == lastY) {\n                        if (!segment.isOccluded) {\n                            throw \"should be occluded\";\n                        }\n                    }\n                    else {\n                        if (segment.isOccluded) {\n                            debugger;\n                            throw \"incorrectly occluded\";\n                        }\n                    }\n                    lastX = segment.locationX;\n                    lastY = segment.locationY;\n                }\n            }\n            organism = organism.next;\n        }\n    };\n    /**\n     * Find and return an empty location on the board\n     */\n    World.prototype.getEmptyLocation = function () {\n        var result = new __WEBPACK_IMPORTED_MODULE_4__point__[\"a\" /* Point */]();\n        while (true) {\n            result.randomize(__WEBPACK_IMPORTED_MODULE_0__world_parameters__[\"a\" /* WorldParameters */].WORLDSIZE);\n            if (this.elements[result.x][result.y] == null) {\n                return result;\n            }\n        }\n    };\n    /**\n     * Put an element on the board\n     */\n    World.prototype.put = function (x, y, element) {\n        x &= 255;\n        y &= 255;\n        this.elements[x][y] = element;\n        /*\n                    if (element == null || ! this.elements[x][y]) {\n                        this.elements[x][y] = element;\n                    }\n                    else {\n                        if (element.organism != this.elements[x][y].organism) {\n                                debugger;\n                            throw \"WHAT???\"\n                        }\n                    }\n        */\n        if (element) {\n            element.locationX = x;\n            element.locationY = y;\n        }\n    };\n    /**\n     * Get an element from the board\n     */\n    World.prototype.get = function (x, y) {\n        //x = (x + this.parameters.size) % this.parameters.size;\n        //y = (y + this.parameters.size) % this.parameters.size;\n        return this.elements[x & 255][y & 255];\n    };\n    /**\n     * Process the actions of all organisms on the board\n     */\n    World.prototype.turnCrank = function () {\n        this.prepareObstacles();\n        var organism = this.headOrganism;\n        //console.log(\"turn #\" + this.turn++);\n        ++this.turn;\n        var i = 0;\n        while (organism) {\n            if (i > 65535) {\n                debugger;\n            }\n            //                var nextOrganism:Organism = organism.next;\n            //this.validate();\n            // die if energy is below zero\n            var nextOrganism;\n            nextOrganism = undefined;\n            if ((organism.energy < 0 && organism.genome != '*') || organism.lifespan < 0) {\n                nextOrganism = organism.next;\n                this.killOrganism(organism);\n            }\n            else {\n                organism.turnCrank(this);\n                // spawn if energy is above threshhold\n                if (this.numOrganisms < this.parameters.maximumOrganisms) {\n                    organism.spawnIfAble(this);\n                }\n            }\n            if (nextOrganism !== undefined) {\n                organism = nextOrganism;\n            }\n            else {\n                organism = organism.next;\n            }\n            ++i;\n        }\n        if ((this.turn % 100) == 0) {\n        }\n        if (this.parameters.foodDropSpeed) {\n            if (this.parameters.foodDropSpeed >= 99 || ((this.turn % (100 - this.parameters.foodDropSpeed)) == 0)) {\n                for (var i = 0; i < 5; i++) {\n                    var location = this.getEmptyLocation();\n                    this.put(location.x, location.y, this.foodElement);\n                }\n            }\n        }\n    };\n    World.prototype.insert = function (genome) {\n        var location = this.getEmptyLocation();\n        this.createOrganism(genome, location);\n    };\n    World.prototype.createOrganism = function (genome, location) {\n        // ensure the world position is empty\n        if (this.elements[location.x][location.y]) {\n            return null;\n        }\n        // create the new organism and its segments\n        var organism;\n        var recycle = true;\n        if (recycle && this.headOrganismInactive) {\n            organism = this.headOrganismInactive;\n            this.headOrganismInactive = this.headOrganismInactive.next;\n            organism.next = organism.prev = null;\n            organism.initialize(genome, location, this);\n        }\n        else {\n            organism = new __WEBPACK_IMPORTED_MODULE_3__organism__[\"a\" /* Organism */](genome, location, this);\n        }\n        this.addOrganism(organism);\n        return organism;\n    };\n    /**\n     * Link the organism into the world\n     */\n    World.prototype.addOrganism = function (organism) {\n        ++this.numOrganisms;\n        var oldHead = this.headOrganism;\n        this.headOrganism = organism;\n        if (oldHead) {\n            oldHead.prev = organism;\n            organism.next = oldHead;\n        }\n    };\n    World.prototype.killOrganism = function (organism, wasEaten) {\n        if (wasEaten === void 0) { wasEaten = false; }\n        --this.numOrganisms;\n        if (organism == this.headOrganism) {\n            this.headOrganism = organism.next;\n            if (this.headOrganism) {\n                this.headOrganism.prev = null;\n            }\n        }\n        else {\n            if (organism.next) {\n                organism.next.prev = organism.prev;\n            }\n            if (organism.prev) {\n                organism.prev.next = organism.next;\n            }\n        }\n        var segment = organism.headSegment;\n        if (organism.genome == '*') {\n            this.put(segment.locationX, segment.locationY, null);\n            return;\n        }\n        while (segment) {\n            this.put(segment.locationX, segment.locationY, null);\n            segment = segment.next;\n        }\n        segment = organism.headSegment;\n        while (segment) {\n            if (segment.isOccluded) {\n                break;\n            }\n            if (!wasEaten) {\n                this.put(segment.locationX, segment.locationY, this.foodElement);\n            }\n            segment = segment.next;\n        }\n        organism.reset();\n        organism.next = this.headOrganismInactive;\n        this.headOrganismInactive = organism;\n    };\n    World.prototype.setObstacles = function (obstacles) {\n        this.newObstacles = obstacles;\n    };\n    World.prototype.prepareObstacles = function () {\n        if (this.newObstacles === undefined) {\n            return;\n        }\n        var obstacles = this.newObstacles;\n        this.newObstacles = undefined;\n        // clear existing obstacles\n        for (var x = 0; x < this.MAX_WORLD_SIZE; x++) {\n            for (var y = 0; y < this.MAX_WORLD_SIZE; y++) {\n                if (this.elements[x][y] && this.elements[x][y].type == __WEBPACK_IMPORTED_MODULE_1__element__[\"a\" /* ElementType */].BARRIER) {\n                    this.put(x, y, null);\n                }\n            }\n        }\n        var points = [];\n        switch (obstacles) {\n            case 1:\n                for (var a = 0; a < 124; a++) {\n                    points.push(new __WEBPACK_IMPORTED_MODULE_4__point__[\"a\" /* Point */](a, a));\n                    points.push(new __WEBPACK_IMPORTED_MODULE_4__point__[\"a\" /* Point */](255 - a, a));\n                    points.push(new __WEBPACK_IMPORTED_MODULE_4__point__[\"a\" /* Point */](a, 255 - a));\n                    points.push(new __WEBPACK_IMPORTED_MODULE_4__point__[\"a\" /* Point */](255 - a, 255 - a));\n                }\n                break;\n            case 2:\n                for (var a = 2; a < 254; a++) {\n                    points.push(new __WEBPACK_IMPORTED_MODULE_4__point__[\"a\" /* Point */](a, 2));\n                    points.push(new __WEBPACK_IMPORTED_MODULE_4__point__[\"a\" /* Point */](a, 253));\n                    points.push(new __WEBPACK_IMPORTED_MODULE_4__point__[\"a\" /* Point */](2, a));\n                    points.push(new __WEBPACK_IMPORTED_MODULE_4__point__[\"a\" /* Point */](253, a));\n                }\n                break;\n        }\n        var self = this;\n        points.forEach(function (point) {\n            if (self.elements[point.x][point.y] && self.elements[point.x][point.y].organism) {\n                self.killOrganism(self.elements[point.x][point.y].organism, true);\n            }\n            self.put(point.x, point.y, self.barrierElement);\n        });\n    };\n    return World;\n}());\n//} \n//# sourceMappingURL=/Users/sschafer/projhome/presto-evolution/src/world.js.map\n\n/***/ },\n\n/***/ 634:\n/***/ function(module, exports) {\n\nmodule.exports = \".top-ten-list{\\n    padding:10px;\\n}\\n\\n.top-ten-list .header-row{\\n    background:#eeeeee;\\n    font-size:80%;\\n}\\n\\n.top-ten-list .entry-row{\\n    background:#ffffff;\\n    background:-webkit-linear-gradient(top,  #ffffff 0%,#f0f0f0 97%,#fafafa 100%);\\n    background:linear-gradient(to bottom,  #ffffff 0%,#f0f0f0 97%,#fafafa 100%);\\n    filter:progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#fafafa',GradientType=0 );\\n}\\n\\n.top-ten-list td, .top-ten-list th{\\n    padding:4px;\\n}\\n\\n.top-ten-list td:nth-child(1), .top-ten-list th:nth-child(1){\\n    width:20px;\\n}\\n\\n.top-ten-list td:nth-child(2), .top-ten-list th:nth-child(2){\\n    width:50px;\\n}\\n\\n.top-ten-list .genomeColor{\\n    position:relative;\\n    width:16px;\\n    height:16px;\\n}\\n\\n.param-label{\\n    width:140px;\\n    padding-top:5px;\\n    text-align:right;\\n    font-size:80%;\\n}\\n\\n.param-row{\\n    margin-bottom:0!important;\\n}\\n\\n.param-label{\\n    max-width:150px;\\n}\\n\\n.user-genome{\\n    width:150px;\\n}\"\n\n/***/ },\n\n/***/ 635:\n/***/ function(module, exports) {\n\nmodule.exports = \".off-screen-canvas{\\n    display:none;\\n}\\n\"\n\n/***/ },\n\n/***/ 636:\n/***/ function(module, exports) {\n\nmodule.exports = \"<div class=\\\"fluid-container\\\">\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col s6\\\">\\n      <app-world-view [pixels]=\\\"renderPixels\\\" worldSize=\\\"256\\\"></app-world-view>\\n\\n      <!-- GENERAL PARAMETERS -->\\n      <!--   SPEED: -->\\n      <div class=\\\"row param-row\\\">\\n        <div class=\\\"col param-label\\\">Speed:</div>\\n        <div class=\\\"col s6\\\"><input [(ngModel)]=\\\"params.speed\\\" type=\\\"range\\\" name=\\\"points\\\" min=\\\"0\\\" max=\\\"10\\\"></div>\\n        <div class=\\\"col s2\\\">{{params.speed}}</div>\\n      </div>\\n\\n      <!--   MUTATION RATE: -->\\n      <div class=\\\"row param-row\\\">\\n        <div class=\\\"col param-label\\\">Mutation rate:</div>\\n        <div class=\\\"col s6\\\"><input [(ngModel)]=\\\"params.mutationRate\\\" type=\\\"range\\\" name=\\\"points\\\" min=\\\"0\\\" max=\\\"50\\\"></div>\\n        <div class=\\\"col s2 param-label\\\">{{params.mutationRate}}%</div>\\n      </div>\\n\\n      <!--   FOOD DROP RATE: -->\\n      <div class=\\\"row param-row\\\">\\n        <div class=\\\"col param-label\\\">Food drop rate:</div>\\n        <div class=\\\"col s6\\\"><input [(ngModel)]=\\\"params.foodDropSpeed\\\" type=\\\"range\\\" name=\\\"points\\\" min=\\\"0\\\" max=\\\"100\\\"></div>\\n        <div class=\\\"col s2 param-label\\\">{{params.foodDropSpeed}}%</div>\\n      </div>\\n\\n      <div class=\\\"row param-row\\\">\\n        <div class=\\\"col param-label\\\">Obstacles:</div>\\n        <div class=\\\"col s6\\\"><input [(ngModel)]=\\\"obstacles\\\" (ngModelChange)=\\\"onObstacleChange($event)\\\"\\n           type=\\\"range\\\" name=\\\"points\\\" min=\\\"0\\\" max=\\\"2\\\"></div>\\n        <div class=\\\"col s2 param-label\\\">{{(obstacles==0) ? 'None' : (\\\"#\\\" + obstacles)}}</div>\\n      </div>\\n\\n\\n      <!-- ADVANCED SETTINGS -->\\n      <ul materialize=\\\"collapsible\\\" class=\\\"collapsible\\\" data-collapsible=\\\"accordion\\\">\\n        <li>\\n          <div class=\\\"collapsible-header\\\"><i class=\\\"material-icons\\\">settings</i>Advanced Settings</div>\\n          <div class=\\\"collapsible-body\\\">\\n    \\n            <div class=\\\"row param-row\\\">\\n              <div class=\\\"col param-label\\\">Spawn energy:</div>\\n              <div class=\\\"col s6\\\"><input [(ngModel)]=\\\"params.spawnEnergyPerSegment\\\" type=\\\"range\\\" name=\\\"points\\\" min=\\\"50\\\" max=\\\"500\\\"></div>\\n              <div class=\\\"col s2  param-label\\\">{{params.spawnEnergyPerSegment}} per segment</div>\\n            </div>\\n    \\n            <div class=\\\"row param-row\\\">\\n              <div class=\\\"col param-label\\\">Lifespan:</div>\\n              <div class=\\\"col s6\\\"><input [(ngModel)]=\\\"params.lifespanPerSegment\\\" type=\\\"range\\\" name=\\\"points\\\" min=\\\"5000\\\" max=\\\"50000\\\"></div>\\n              <div class=\\\"col s2 param-label\\\">{{params.lifespanPerSegment}} per segment</div>\\n            </div>\\n    \\n            <div class=\\\"row param-row\\\">\\n              <div class=\\\"col param-label\\\">Photosynthesis gain:</div>\\n              <div class=\\\"col s6\\\"><input [(ngModel)]=\\\"params.energyGainedFromPhotosythesizing\\\"\\n                type=\\\"range\\\" name=\\\"points\\\" min=\\\"1\\\" max=\\\"3\\\" step=\\\".05\\\"></div>\\n              <div class=\\\"col s2 param-label\\\">{{(params.energyGainedFromPhotosythesizing - 1) | number:'1.2-2'}}</div>\\n            </div>\\n    \\n            <div class=\\\"row param-row\\\">\\n              <div class=\\\"col param-label\\\">Move cost:</div>\\n              <div class=\\\"col s6\\\"><input [(ngModel)]=\\\"params.energyMoveCost\\\" type=\\\"range\\\" name=\\\"points\\\" min=\\\"0\\\" max=\\\"20\\\" step=\\\".05\\\"></div>\\n              <div class=\\\"col s2 param-label\\\">{{params.energyMoveCost | number:'1.2-2'}}</div>\\n            </div>\\n    \\n            <div class=\\\"row param-row\\\">\\n              <div class=\\\"col param-label\\\">Move and eat cost:</div>\\n              <div class=\\\"col s6\\\"><input [(ngModel)]=\\\"params.energyMoveAndEatCost\\\" type=\\\"range\\\" name=\\\"points\\\" min=\\\"0\\\" max=\\\"20\\\" step=\\\".05\\\"></div>\\n              <div class=\\\"col s2 param-label\\\">{{params.energyMoveAndEatCost | number:'1.2-2'}}</div>\\n            </div>\\n\\n            <div class=\\\"row param-row\\\">\\n              <div class=\\\"col param-label\\\">Bite strength:</div>\\n              <div class=\\\"col s6\\\"><input [(ngModel)]=\\\"params.biteStrength\\\" type=\\\"range\\\" name=\\\"points\\\" min=\\\"0\\\" max=\\\"1000\\\"></div>\\n              <div class=\\\"col s2 param-label\\\">{{params.biteStrength}}</div>\\n            </div>\\n\\n            <div class=\\\"row param-row\\\">\\n              <div class=\\\"col param-label\\\">Digestion efficiency:</div>\\n              <div class=\\\"col s6\\\"><input [(ngModel)]=\\\"params.digestionEfficiency\\\" type=\\\"range\\\" name=\\\"points\\\" min=\\\"0\\\" max=\\\"100\\\"></div>\\n              <div class=\\\"col s2 param-label\\\">{{params.digestionEfficiency}}%</div>\\n            </div>\\n          </div>\\n        </li>\\n      </ul>\\n\\n    </div>\\n\\n    <div class=\\\"col s6\\\">\\n\\n      <button (click)=\\\"resetWorld()\\\" class=\\\"waves-effect waves-light btn\\\">Reset</button>\\n      <button (click)=\\\"insert('*')\\\" class=\\\"waves-effect waves-light btn\\\">Insert \\\"*\\\"</button>\\n      <button (click)=\\\"insert('M')\\\" class=\\\"waves-effect waves-light btn\\\">Insert \\\"M\\\"</button>\\n      <button (click)=\\\"insert(userGenome)\\\" class=\\\"waves-effect waves-light btn\\\">Insert: </button>\\n      <input class=\\\"user-genome\\\" type=\\\"text\\\" [(ngModel)]=\\\"userGenome\\\" placeholder=\\\"Genome\\\">\\n\\n      <!-- TOP TEN SPECIES -->\\n      <ul materialize=\\\"collapsible\\\" class=\\\"collapsible\\\"> <!-- data-collapsible=\\\"accordion\\\"> -->\\n        <li>\\n          <div class=\\\"collapsible-header\\\"><i class=\\\"material-icons\\\">whatshot</i>Top 10 Species</div>\\n          <div class=\\\"collapsible-body\\\">\\n\\n            <table class=\\\"top-ten-list\\\">\\n\\n              <tr class=\\\"header-row\\\">\\n                <th></th>\\n                <th>#</th>\\n                <th>Genome</th>\\n              </tr>\\n\\n              <tr class=\\\"entry-row\\\" *ngFor='let critterStats of topTen'>\\n                <td>\\n                  <div class=\\\"genomeColor\\\" [style.backgroundColor]=\\\"critterStats.color\\\"></div>\\n                </td>\\n\\n                <td>\\n                  {{critterStats.count}}\\n                </td>\\n\\n                <td>\\n                  {{critterStats.genome}}\\n                </td>\\n              </tr>\\n            </table>\\n          </div>\\n        </li>\\n      </ul>\\n\\n\\n      <!-- INSTRUCTION SET -->\\n      <ul materialize=\\\"collapsible\\\" class=\\\"collapsible\\\" data-collapsible=\\\"accordion\\\">\\n        <li>\\n          <div class=\\\"collapsible-header\\\"><i class=\\\"material-icons\\\">shuffle</i>Instruction Set</div>\\n          <div class=\\\"collapsible-body\\\">\\n\\n            <table class=\\\"top-ten-list\\\">\\n            \\n              <tr class=\\\"entry-row\\\" *ngFor='let instruction of allInstructions'>\\n                <td>\\n                  {{instruction.code}}\\n                </td>\\n\\n                <td>\\n                  {{instruction.description}}\\n                </td>\\n              </tr>\\n            </table>\\n          </div>\\n        </li>\\n      </ul>\\n\\n\\n\\n    </div>\\n\\n  </div>\\n</div>\\n\\n<!--\\n<h1>\\n  {{title}}\\n</h1>\\n\\n<button class=\\\"waves-effect waves-light btn\\\">Test Button</button>\\n\\n\\n<div flex layout=\\\"column\\\" class=\\\"full-screen\\\">\\n  <div flex>Title bar</div>\\n\\n  <div flex=\\\"50\\\" layout=\\\"row\\\"> \\n    <div flex class=\\\"column-simulation\\\">\\n      First column\\n\\n\\n      <app-world-view [pixels]=\\\"renderPixels\\\" style=\\\"width:512px;height:512px\\\"></app-world-view>\\n    </div>\\n    \\n    <div flex=\\\"50\\\" class=\\\"column-controls\\\">\\n      column controls\\n    <ul materialize=\\\"collapsible\\\" class=\\\"collapsible\\\" data-collapsible=\\\"accordion\\\">\\n          <li>\\n            <div class=\\\"collapsible-header\\\"><i class=\\\"material-icons\\\">filter_drama</i>First</div>\\n            <div class=\\\"collapsible-body\\\"><p>Lorem ipsum dolor sit amet.</p></div>\\n          </li>\\n          <li>\\n            <div class=\\\"collapsible-header\\\"><i class=\\\"material-icons\\\">place</i>Second</div>\\n            <div class=\\\"collapsible-body\\\"><p>Lorem ipsum dolor sit amet.</p></div>\\n          </li>\\n          <li>\\n            <div class=\\\"collapsible-header\\\"><i class=\\\"material-icons\\\">whatshot</i>Third</div>\\n            <div class=\\\"collapsible-body\\\"><p>Lorem ipsum dolor sit amet.</p></div>\\n          </li>\\n        </ul>\\n              \\n      Second column\\n      <input [(ngModel)]=\\\"params.speed\\\" type=\\\"range\\\" name=\\\"points\\\" min=\\\"0\\\" max=\\\"10\\\">\\n      params = {{params | json}}<br>\\n        Speed = {{speed}}\\n\\n    </div>\\n  </div>\\n\\n  <div flex>bottom bar</div>\\n</div>\\n-->\\n\\n<!-- Modal Trigger -->\\n<a class=\\\"waves-effect waves-light btn modal-trigger\\\" (click)=\\\"openAbout()\\\">Modal</a>\\n \\n<!-- Modal Structure -->\\n<div id=\\\"modal1\\\" class=\\\"modal bottom-sheet\\\" materialize=\\\"modal\\\" [materializeParams]=\\\"[{dismissible: false}]\\\" [materializeActions]=\\\"modalActions\\\">\\n  <div class=\\\"modal-content\\\">\\n    <h4>Yet another evolutionary simulation</h4>\\n    <p>A bunch of text</p>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <a class=\\\"waves-effect waves-green btn-flat\\\" (click)=\\\"closeAbout()\\\">Close</a>\\n  </div>\\n</div>\"\n\n/***/ },\n\n/***/ 637:\n/***/ function(module, exports) {\n\nmodule.exports = \"<canvas class=\\\"world-view off-screen-canvas\\\" width=\\\"256\\\" height=\\\"256\\\"></canvas>\\n<canvas class=\\\"world-view on-screen-canvas\\\" width=\\\"256\\\" height=\\\"256\\\"\\n    on-mousedown=\\\"mousedown($event)\\\"\\n    on-mousemove=\\\"mousemove($event)\\\"\\n    on-mouseup=\\\"mouseup($event)\\\"></canvas>\"\n\n/***/ },\n\n/***/ 665:\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(357);\n\n\n/***/ },\n\n/***/ 70:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return ElementType; });\n/* harmony export (binding) */ __webpack_require__.d(exports, \"b\", function() { return Element; });\n//module LibSim {\n/**\n * Element - something that occupies one of the cells on the 2D board.\n *\n * Could be a segment of a critter, or something inanimate;\n */\nvar ElementType;\n(function (ElementType) {\n    ElementType[ElementType[\"BARRIER\"] = 0] = \"BARRIER\";\n    ElementType[ElementType[\"FOOD\"] = 1] = \"FOOD\";\n    ElementType[ElementType[\"POISON\"] = 2] = \"POISON\";\n    ElementType[ElementType[\"ORGANISM\"] = 3] = \"ORGANISM\";\n})(ElementType || (ElementType = {}));\nvar Element = (function () {\n    function Element(type, organism) {\n        if (organism === void 0) { organism = null; }\n        this.initialize(type, organism);\n    }\n    Element.prototype.reset = function () {\n        this.organism = null;\n        this.next = null;\n        this.instruction = null;\n    };\n    Element.prototype.initialize = function (type, organism) {\n        if (organism === void 0) { organism = null; }\n        this.type = type;\n        this.organism = organism;\n        if (type == ElementType.ORGANISM && !organism) {\n            throw 'Element must have an organism object if of ORGANISM type!';\n        }\n        if (type != ElementType.ORGANISM && organism) {\n        }\n    };\n    return Element;\n}());\n//} \n//# sourceMappingURL=/Users/sschafer/projhome/presto-evolution/src/element.js.map\n\n/***/ },\n\n/***/ 96:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(exports, \"b\", function() { return InstructionResult; });\n/* unused harmony export InstructionParameter */\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return Instruction; });\n/**\n * The various instructions, how they are displayed and what they do\n */\nvar InstructionResult;\n(function (InstructionResult) {\n    InstructionResult[InstructionResult[\"DONT_ADVANCE\"] = 0] = \"DONT_ADVANCE\";\n    InstructionResult[InstructionResult[\"EXECUTE_AGAIN\"] = 1] = \"EXECUTE_AGAIN\";\n})(InstructionResult || (InstructionResult = {}));\n/**\n * A definition for an instuction parameter that could be tweaked by the user. For example, how far can an organism see?\n */\nvar InstructionParameter = (function () {\n    function InstructionParameter(_name, _key, _defaultValue) {\n        this._name = _name;\n        this._key = _key;\n        this._defaultValue = _defaultValue;\n    }\n    Object.defineProperty(InstructionParameter.prototype, \"name\", {\n        get: function () { return this._name; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(InstructionParameter.prototype, \"key\", {\n        get: function () { return this._key; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(InstructionParameter.prototype, \"defaultValue\", {\n        get: function () { return this._defaultValue; },\n        enumerable: true,\n        configurable: true\n    });\n    return InstructionParameter;\n}());\n/**\n * Base class for instructions\n */\nvar Instruction = (function () {\n    /**\n     * Initialize and register this instruction\n     */\n    function Instruction(_code, // a letter or symbol\n        _description, energyImpact, _parameterDefinitions) {\n        if (energyImpact === void 0) { energyImpact = Instruction.DEFAULT_ENERGY_IMPACT; }\n        if (_parameterDefinitions === void 0) { _parameterDefinitions = null; }\n        this._code = _code;\n        this._description = _description;\n        this._parameterDefinitions = _parameterDefinitions;\n        this._parameters = {};\n        Instruction.allCodes += _code;\n        // fast lookup on code\n        Instruction._instructionMap[_code] = this;\n        // create the energy impact parameter, and add it to the definition array\n        var energyImpactParam = new InstructionParameter(\"Energy impact\", \"energyImpact\", Instruction.DEFAULT_ENERGY_IMPACT);\n        if (this._parameterDefinitions == null) {\n            this._parameterDefinitions = [energyImpactParam];\n        }\n        else {\n            this._parameterDefinitions.push(energyImpactParam);\n        }\n        // now set up the default parameter values\n        for (var i in this._parameterDefinitions) {\n            var parameter = this._parameterDefinitions[i];\n            this._parameters[parameter.key] = parameter.defaultValue;\n        }\n        // register this instruction in a static array\n        if (!Instruction._allInstructions) {\n            Instruction._allInstructions = [this];\n        }\n        else {\n            Instruction._allInstructions.push(this);\n        }\n    }\n    Object.defineProperty(Instruction, \"allInstructions\", {\n        get: function () { return Instruction._allInstructions; },\n        enumerable: true,\n        configurable: true\n    });\n    Instruction.instructionFromCode = function (code) {\n        return Instruction._instructionMap[code];\n    };\n    Object.defineProperty(Instruction.prototype, \"description\", {\n        get: function () { return this._description; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Instruction.prototype, \"code\", {\n        get: function () { return this._code; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Instruction.prototype, \"energyImpact\", {\n        get: function () { return this._parameters.energyImpact; },\n        enumerable: true,\n        configurable: true\n    });\n    Instruction.DEFAULT_ENERGY_IMPACT = -.5;\n    Instruction._instructionMap = {};\n    Instruction.allCodes = ''; // all the instructions in code form\n    return Instruction;\n}());\n//# sourceMappingURL=/Users/sschafer/projhome/presto-evolution/src/instruction.js.map\n\n/***/ },\n\n/***/ 97:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return WorldParameters; });\nvar WorldParameters = (function () {\n    function WorldParameters() {\n        // simulation parameters\n        this.speed = 5;\n        this.maximumOrganisms = 30000;\n        this.initialFoodCount = 1000;\n        this.foodDropSpeed = 50;\n        // the percentage of times a newly spawned offspring will have a mutation\n        this.mutationRate = 10;\n        // the amount of energy required to spawn a new offspring\n        this.spawnEnergyPerSegment = 200;\n        // lifespan\n        this.lifespanPerSegment = 50000;\n        this.lifespanRandomizationPercent = 10;\n        this.energyTurnCost = 1;\n        this.energyMoveCost = 2;\n        this.energyMoveAndEatCost = 15;\n        this.energyGainedFromPhotosythesizing = 1.25;\n        this.biteStrength = 200;\n        this.digestionEfficiency = 50;\n    }\n    WorldParameters.WORLDSIZE = 256;\n    return WorldParameters;\n}());\n//# sourceMappingURL=/Users/sschafer/projhome/presto-evolution/src/world-parameters.js.map\n\n/***/ }\n\n},[665]);\n\n\n// WEBPACK FOOTER //\n// main.88103a8f7d889a7b030d.bundle.js","/// <reference path='point.ts'/>\n/// <reference path='world.ts'/>\n/// <reference path='element.ts'/>\n/// <reference path='instruction.ts'/>\n/// <reference path='utils.ts'/>\n/// <reference path='organism.ts'/>\n\nimport { Element } from './element';\nimport { ElementType } from './element';\nimport { Organism } from './organism';\nimport { Instruction } from './instruction';\nimport { World } from './world';\nimport { InstructionResult } from './instruction';\n\n//module LibSim {\n\n/********************\n * All instructions\n */\nexport class InstructionsAll {\n    static all:Instruction[] = [];\n}\n\n/***********************************************************************\n |   \"m\": Move instruction\n ***********************************************************************/\nexport class InstructionMove extends Instruction {\n\n    constructor() {\n        super('m', 'Move the organism by one element in the current orientation of the head');\n    }\n\n    do(organism: Organism, world: World, element:Element) {\n        organism.move(world, false);\n    }\n}\nInstructionsAll.all.push(new InstructionMove());\n\n\n/***********************************************************************\n |   \"m\": Move instruction\n ***********************************************************************/\nexport class InstructionMoveAndEat extends Instruction {\n\n    constructor() {\n        super('M', 'Move and eat any food or Photosyntheize cell in front of the head');\n    }\n\n    do(organism: Organism, world: World, element:Element) {\n        organism.move(world, true);\n    }\n}\nInstructionsAll.all.push(new InstructionMoveAndEat());\n\n/***********************************************************************\n |   \"H\": hyper mode!\n ***********************************************************************/\nexport class InstructionHyper extends Instruction {\n\n    constructor() {\n        super('H', 'Hypermode!');\n    }\n\n    do(organism: Organism, world: World, element:Element) {\n        organism.instructionsPerTurn += organism.instructionsPerTurn;\n        //organism.energy += world.parameters.energyTurnCost; // zero cost\n        return InstructionResult.EXECUTE_AGAIN;\n    }\n}\nInstructionsAll.all.push(new InstructionHyper());\n\n\n/***********************************************************************\n |   \"*\": Photosyntheize instruction\n ***********************************************************************/\nexport class InstructionPhotosynthesize extends Instruction {\n\n    constructor() {\n        super('*', 'Gains energy');\n    }\n\n    do(organism: Organism, world: World, element:Element) {\n        /*\n        if (! element.isOccluded) {\n            organism.energy += world.parameters.energyGainedFromPhotosythesizing;\n        } \n        */        \n    }\n}\nInstructionsAll.all.push(new InstructionPhotosynthesize());\n\n/***********************************************************************\n |   \"Z\": Sleep\n ***********************************************************************/\nexport class InstructionSleep extends Instruction {\n\n    constructor() {\n        super('Z', 'Sleep');\n    }\n\n    do(organism: Organism, world: World, element:Element) {\n        organism.sleepCount += 5;\n    }\n}\nInstructionsAll.all.push(new InstructionSleep());\n\n/***********************************************************************\n |   \"<\": Turn left\n ***********************************************************************/\nexport class InstructionTurnLeft extends Instruction {\n\n    constructor() {\n        super('<', 'Turn left');\n    }\n\n    do(organism: Organism, world: World, element:Element) {\n        organism.setOrientation((organism.headOrientation + 3) % 4);         \n    }\n}\nInstructionsAll.all.push(new InstructionTurnLeft());\n\n/***********************************************************************\n |   \">\": Turn right\n ***********************************************************************/\nexport class InstructionTurnRight extends Instruction {\n\n    constructor() {\n        super('>', 'Turn right');\n    }\n\n    do(organism: Organism, world: World, element:Element) {\n        organism.setOrientation((organism.headOrientation + 1) % 4);         \n    }\n}\nInstructionsAll.all.push(new InstructionTurnRight());\n\n/***********************************************************************\n |   \"U\": Orient up\n ***********************************************************************/\nexport class InstructionOrientUp extends Instruction {\n\n    constructor() {\n        super('U', 'Orient Up');\n    }\n\n    do(organism: Organism, world: World, element:Element) {\n        organism.setOrientation(0);         \n    }\n}\nInstructionsAll.all.push(new InstructionOrientUp());\n\n/***********************************************************************\n |   \"D\": Orient down\n ***********************************************************************/\nexport class InstructionOrientDown extends Instruction {\n\n    constructor() {\n        super('D', 'Orient Down');\n    }\n\n    do(organism: Organism, world: World, element:Element) {\n        organism.setOrientation(2);         \n    }\n}\nInstructionsAll.all.push(new InstructionOrientDown());\n\n/***********************************************************************\n |   \"L\": Orient left\n ***********************************************************************/\nexport class InstructionOrientLeft extends Instruction {\n\n    constructor() {\n        super('L', 'Orient Left');\n    }\n\n    do(organism: Organism, world: World, element:Element) {\n        organism.setOrientation(3);         \n    }\n}\nInstructionsAll.all.push(new InstructionOrientLeft());\n\n/***********************************************************************\n |   \"R\": Orient right\n ***********************************************************************/\nexport class InstructionOrientRight extends Instruction {\n\n    constructor() {\n        super('R', 'Orient Right');\n    }\n\n    do(organism: Organism, world: World, element:Element) {\n        organism.setOrientation(1);         \n    }\n}\nInstructionsAll.all.push(new InstructionOrientRight());\n\n/***********************************************************************\n |   \"0\": Test if facing food\n ***********************************************************************/\nexport class InstructionIfFoodFacing extends Instruction {\n\n    constructor() {\n        super('0', 'Test if facing food');\n    }\n\n    do(organism: Organism, world: World, element:Element) {\n        if (! organism.testIfFacing(ElementType.FOOD, world)) {\n            organism.doNotIf();\n            return InstructionResult.DONT_ADVANCE;\n        }\n    }\n}\nInstructionsAll.all.push(new InstructionIfFoodFacing());\n\n/***********************************************************************\n |   \"1\": Test if NOT facing food\n ***********************************************************************/\nexport class InstructionIfNotFoodFacing extends Instruction {\n\n    constructor() {\n        super('1', 'Test if NOT facing food');\n    }\n\n    do(organism: Organism, world: World, element:Element) {\n        if (organism.testIfFacing(ElementType.FOOD, world)) {\n            organism.doNotIf();\n            return InstructionResult.DONT_ADVANCE;\n        }\n    }\n}\nInstructionsAll.all.push(new InstructionIfNotFoodFacing());\n\n/***********************************************************************\n |   \"2\": Test if blocked\n ***********************************************************************/\nexport class InstructionIfBlocked extends Instruction {\n\n    constructor() {\n        super('2', 'Test if blocked');\n    }\n\n    do(organism: Organism, world: World, element:Element) {\n        if (! organism.wasBlocked) {\n            organism.doNotIf();\n            return InstructionResult.DONT_ADVANCE;\n        }\n    }\n}\nInstructionsAll.all.push(new InstructionIfBlocked());\n\n/***********************************************************************\n |   \"3\": Test if NOT blocked\n ***********************************************************************/\nexport class InstructionIfNotBlocked extends Instruction {\n\n    constructor() {\n        super('3', 'Test if NOT blocked');\n    }\n\n    do(organism: Organism, world: World, element:Element) {\n        if (organism.wasBlocked) {\n            organism.doNotIf();\n            return InstructionResult.DONT_ADVANCE;\n        }\n    }\n}\nInstructionsAll.all.push(new InstructionIfNotBlocked());\n\n\n/***********************************************************************\n |   \"e\": Else\n ***********************************************************************/\nexport class InstructionElse extends Instruction {\n\n    constructor() {\n        super('e', 'Else');\n    }\n\n    do(organism: Organism, world: World, element:Element) {\n        organism.energy += world.parameters.energyTurnCost * .75;\n    }\n}\nInstructionsAll.all.push(new InstructionElse());\n\n\n//}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/simulation/instructions-all.ts","import { World } from './world';\nimport { Color } from './color';\nimport { ElementType } from './element';\nimport { WorldParameters } from './world-parameters';\n\n//module LibSim {\n\n/*\nimport { World } from './world';\nimport { Color } from './color';\nimport { ElementType } from './element';\n*/\n\n/** \n * A transfer object that is sent from the worker thread to the main rendering thread instructing it what to render.\n */\n\nexport class WorldRenderData {\n  static _pixels: ArrayBuffer;\n  topTenList: any;\n  pixels: ArrayBuffer;\n\n  constructor(world:World, determineTopTen:boolean = false) {\n      this.preparePixels(world);\n      if (determineTopTen) {\n          this.determineTopTenList(world);\n      }\n  }\n\n  private preparePixels(world:World) {\n      var dim = WorldParameters.WORLDSIZE;\n      var byteLength = dim * dim * 4;\n      if (WorldRenderData._pixels == null || WorldRenderData._pixels.byteLength != byteLength) {\n          WorldRenderData._pixels = new ArrayBuffer(byteLength);\n      }\n      this.pixels = WorldRenderData._pixels;\n      var outBuffer = new Uint32Array(this.pixels);\n\n      var black:number = new Color(0, 0, 0).rgba;\n      var gray:number = new Color(128, 128, 128).rgba;\n      var green:number = new Color(0,255,0).rgba;\n      var darkgreen:number = new Color(0,128,0).rgba;\n      \n      var i:number = 0;\n      for (var x:number = 0; x < dim; x++) {\n          for (var y:number = 0; y < dim; y++) {\n              var element = world.elements[x][y];\n\n              if (element) {\n                  switch (element.type) {\n                      case ElementType.BARRIER:\n                          outBuffer[i++] = gray;\n                          break;\n\n                      case ElementType.FOOD:\n                          outBuffer[i++] = element.organism ? green : darkgreen;\n                          break;\n                          \n                      case ElementType.ORGANISM:\n                          outBuffer[i++] = element.organism.colorRGBA;\n                          break;\n                  }                          \n              }\n              else {\n                outBuffer[i++] = black;\n              }\n          }\n      }\n  }\n\n  private determineTopTenList(world:World) {\n      var genomesToCounts:any = {};\n      var organism = world.headOrganism;\n      while (organism) {\n          var genome = organism.genome;\n          if (genomesToCounts.hasOwnProperty(genome)) {\n              ++genomesToCounts[genome].count; \n          }\n          else {\n              genomesToCounts[genome] = {\n                  genome: genome,\n                  count: 1,\n                  color: new Color(organism.colorRGBA).getAsCSS()\n              }\n          }\n          organism = organism.next;\n      }\n\n      var sortedArray = [];\n      for (var key in genomesToCounts) {\n          sortedArray.push(genomesToCounts[key]);\n      }\n      sortedArray.sort(function(a,b) {\n          return b.count - a.count;\n      });\n\n      this.topTenList = sortedArray.slice(0,10);\n      while (this.topTenList.length < 10) {\n          this.topTenList.push({\n            genome: ' - ',\n            count: ' ',\n            color: 'white'\n          });\n      }\n  }\n\n  getTransferableData() {\n      var result = [];\n      result.push(this.pixels);\n      return result;\n  }\n}\n//}\n\n\n// WEBPACK FOOTER //\n// ./src/simulation/world-render-data.ts","//module LibSim {\n\n    export class Color {\n        private _r : number = 0;\n        private _g : number = 0;\n        private _b : number = 0;\n        private _a : number = 0;\n        private _rgba: number = 0;\n        \n        public static readonly isLittleEndian: boolean = (function():boolean {\n            var buf:any = new ArrayBuffer(4);\n            var data32 = new Uint32Array(buf);\n            var data8 = new Uint8Array(buf);\n            \n        // Determine whether Uint32 is little- or big-endian.\n            data32[0] = 0x0a0b0c0d;\n            \n            var isLittleEndian = true;\n            if (data8[0] === 0x0a && data8[1] === 0x0b && data8[2] === 0x0c && data8[3] === 0x0d) {\n                return false;\n            }\n            return true;\n        })();\n\n        constructor(r : number, g : number = null, b : number = null, a : number = 255) {\n\n            if (g === null) {\n                if (Color.isLittleEndian) {\n                    this._b = (r >> 16) & 0xff;\n                    this._g = (r >> 8) & 0xff;\n                    this._r = (r) & 0xff;\n                    this._a = 255;\n                }\n                else {\n                    this._a = (r >> 16) & 0xff;\n                    this._r = (r >> 8) & 0xff;\n                    this._g = (r) & 0xff;\n                    this._b = 255;\n                }\n                this._rgba = r;\n                return; \n            }\n            else {\n                this._r = r;\n                this._g = g;\n                this._b = b;\n                this._a = a;\n            }\n\n            if (Color.isLittleEndian) {\n                this._rgba = this._a << 24 | this._b << 16 | this._g << 8 | this._r;\n            }\n            else {\n                this._rgba = this._r << 24 | this._g << 16 | this._b << 8 | this._a;\n            }\n        }\n\n        get r(): number {\n            return this._r;\n        }\n\n        get g(): number {\n            return this._g;\n        }\n\n        get b(): number {\n            return this._b;\n        }\n\n        get rgba(): number {\n            return this._rgba;\n        }\n\n        getAsCSS(): string {\n            return \"rgba(\" + this._r + \",\" + this._g + \",\" + this._b + \",\" + this._a + \")\";\n        }\n    }\n//}\n\n\n// WEBPACK FOOTER //\n// ./src/simulation/color.ts","//module LibSim {\n    export class Point {\n        x: number;\n        y: number;\n        \n        constructor(x: number = 0, y: number = 0) {\n            this.x = x;\n            this.y = y;\n        }\n        \n        add(point: Point) {\n            return new Point(this.x + point.x, this.y + point.y);\n        }\n\n        randomize(size: number) {\n            this.x = Math.floor(size * Math.random());\n            this.y = Math.floor(size * Math.random());        \n        }\n    }\n//}\n\n\n// WEBPACK FOOTER //\n// ./src/simulation/point.ts","//module LibSim {\nexport class Utils {\n\n    static randRangeInt(min:number, max:number):number {\n        return Math.floor(min + (max - min + 1) * Math.random());\n    }\n}\n\n//}\n\n\n// WEBPACK FOOTER //\n// ./src/simulation/utils.ts","\nimport { World } from './world';\nimport { WorldParameters } from './world-parameters';\nimport { WorldRenderData } from './world-render-data';\n//module LibSim {\n\n//import { WebWorkerService } from './angular2-web-worker-ext/web-worker.service';\n\n/** \n * A transfer object that is sent from the worker thread to the main rendering thread instructing it what to render.\n */\n\nexport class WorldRunner {\n  public static MIN_RENDER_MS: number = 16;\n  public static MIN_SURVEY_MS: number = 100;\n  world: World;\n  params:WorldParameters;\n  worker: Worker;\n  private static instance:WorldRunner;\n\n  //declare type RenderDataHandler = (myArgument: WorldRenderData) => void;\n\n  constructor(params:WorldParameters = null) {\n    if (! params) {\n      params = new WorldParameters();\n    }\n    this.params = params;\n    this.world = new World(params);\n\n\n  /*\n    // TODO: use a web worker thread\n    var worker:Worker = this.createThread();\n    window.setInterval(function() {\n      worker.postMessage('interval');\n    }, 1000);\n    */\n  }\n\n  run(callback:Function) {\n    var lastRenderMS = 0;\n    var lastTopTenSurveyMS = 0;\n    var self = this;\n\n    function turnCrank() {\n      self.world.turnCrank();\n\n      // send a render \"event\"\n      var curTime = new Date().getTime();\n      var elapsedRenderTime = curTime - lastRenderMS;\n      var elaspedTopTenSurvey = curTime - lastTopTenSurveyMS;\n      var surveyTopTen = elaspedTopTenSurvey > WorldRunner.MIN_SURVEY_MS;\n\n      if (elapsedRenderTime > WorldRunner.MIN_RENDER_MS) {\n        lastRenderMS = curTime;\n        if (surveyTopTen) {\n          lastTopTenSurveyMS = curTime;\n        }\n        var renderData:WorldRenderData = new WorldRenderData(self.world, surveyTopTen);\n        callback(renderData);\n      }\n    }\n\n    window.setInterval(turnCrank, 0);\n  }\n\n  public static workerThreadFunction() {\n    var world:World = new World(new WorldParameters());\n    var self : any = this;\n    self.postMessage('starting up');\n\n    var worldRunner: WorldRunner = new WorldRunner();\n    self.addEventListener('message', function(e:any) {\n      self.postMessage('got message: ' + e.data);\n      world.turnCrank();\n    });\n  }\n\n\n  setObstacles(obstacles: number): void {\n    this.world.setObstacles(obstacles);\n  }\n\n  reset(): void {\n    this.world.reset();\n  }\n\n  insert(genome:string):void {\n    this.world.insert(genome);\n  }\n\n/*\n  private createWorkerUrl(resolve: Function): string {\n    const resolveString = resolve.toString();\n    const webWorkerTemplate = `\n        self.addEventListener('message', function(e) {\n            postMessage((${resolveString})(e.data));\n        });\n    `;\n    const blob = new Blob([webWorkerTemplate], { type: 'text/javascript' });\n    return URL.createObjectURL(blob);\n  }\n*/\n/*\n  private static threadFunction(): void {\n    //var params:WorldParameters = new WorldParameters();\n    //var world:World = new World(params);\n\n    onmessage = function(e) {\n      debugger;\n      console.log('threadFunction received ' + e.data);\n      window.postMessage('I am a message sent FROM the worker', '*');\n    }\n\n  }\n\n  createThread(): Worker {\n    var worker = new Worker(\"./alifelib/dist/index.js\");\n    worker.onmessage = ev => {\n        window.alert(ev.data);\n    };\n    return worker;\n  }\n  */\n}\n\n//}\n\n\n// WEBPACK FOOTER //\n// ./src/simulation/world-runner.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 356;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 356\n// module chunks = 0","import './polyfills.ts';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import {Component, OnInit, ElementRef, EventEmitter} from '@angular/core';\nimport {toast, MaterializeAction} from \"angular2-materialize\";\nimport {WebWorkerService} from \"./web-worker/web-worker.service\";\nimport * as Simulation from '../simulation/lib.module';\ndeclare var $:any;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [WebWorkerService]\n})\nexport class AppComponent implements OnInit {\n\n  private modalActions = new EventEmitter<string|MaterializeAction>();\n\n  obstacles:number = 0;\n\n  private worldRunner : Simulation.WorldRunner;\n  private allInstructions:Simulation.Instruction[] = [];\n\n  private worker:Worker;\n  params: Simulation.WorldParameters;\n  renderPixels:Object;\n  topTen:any;\n  userGenome: string;\n\n  constructor(private elementRef: ElementRef, private _webWorkerService: WebWorkerService) {\n\n    var useWebWorker = false;\n\n    this.params = new Simulation.WorldParameters();\n    this.worldRunner = new Simulation.WorldRunner(this.params);\n\n    this.allInstructions = Simulation.InstructionsAll.all;\n\n    //var x = require('LibSim');\n\n\n    if (useWebWorker) {\n    // eventually get this working.\n      var promise:Promise<any> = this._webWorkerService.run( \n        function(){\n\n      /*\n              var someMod = require('someModule');\n\n              var self = this;\n              self.postMessage('starting up');\n\n              var worldRunner: WorldRunner = new WorldRunner();\n              self.addEventListener('message', function(e) {\n                self.postMessage('got message: ' + e.data);\n                worldRunner.world.turnCrank();\n              });\n              */\n            }\n        );\n      this.worker = this._webWorkerService.getWorker(promise);\n\n      this.worker.onmessage = function(e) {\n        console.log('Message received from worker: ' + e.data);\n      }\n\n\n      var x = 0;\n      var self = this;    \n      setInterval(function() {\n        self.worker.postMessage([('hey there, worker #' + (++x))]);\n      }, 1000);\n        \n    }\n    else {\n      var self = this;\n      this.worldRunner.run(\n        function(renderData:Simulation.WorldRenderData):void {\n          self.renderPixels = renderData.getTransferableData();\n          if (renderData.topTenList) {\n            \n            // the following line allows for stopping the update of the list, useful for tweaking the styling in the browser:\n            //    if (self.topTen && self.topTen[9].genome) {} else\n\n            self.topTen = renderData.topTenList;\n          }\n        }\n      );\n    }\n\n  }\n\n  ngOnInit(): void {\n    //toast(\"...and Materialize works as well!\");\n    var elem = $(this.elementRef.nativeElement);\n    \n    elem.find(\".collapsible-header\").addClass(\"active\");\n    elem.find(\".collapsible\").collapsible({accordion: false});\n\n    this.openAbout();\n  }\n\n  onObstacleChange(val:any) {\n      this.worldRunner.setObstacles(val);\n  }\n\n  resetWorld(): void {\n    this.worldRunner.reset();\n    this.worldRunner.setObstacles(this.obstacles);\n  }\n\n  insert(genome:string) {\n    if (!genome) {\n      toast('Enter one or more instructions first.', 2000);\n      return;\n    }\n    var allCodes:string = \"\";\n    this.allInstructions.forEach(function(instruction:Simulation.Instruction) {\n      allCodes += instruction.code;\n    });\n    for (var i = 0; i < genome.length; i++) {\n      if (allCodes.indexOf(genome[i]) == -1) {\n        toast('\"' + genome[i] + '\" is not a valid instruction.', 2000);\n        return;        \n      }\n    }\n    this.worldRunner.insert(genome);\n  }\n\n  openAbout() {\n    this.modalActions.emit({action:\"modal\",params:['open']});\n  }\n\n  closeAbout() {\n    this.modalActions.emit({action:\"modal\",params:['close']});\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { MaterializeModule } from 'angular2-materialize';\n\nimport { AppComponent } from './app.component';\nimport { WorldViewComponent } from './world-view/world-view.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WorldViewComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    MaterializeModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import {Injectable} from '@angular/core';\nimport {WebWorkerService as WebWorker } from './web-worker';\n\n@Injectable()\nexport class WebWorkerService extends WebWorker {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/web-worker/web-worker.service.ts","import {IWebWorkerService} from './web-worker.interface';\n\nexport interface IWebWorkerService {\n    run<T>(workerFunction: (any) => T, data?: any): Promise<T>;\n    runUrl(url: string, data?: any): Promise<any>;\n    terminate<T>(promise: Promise<T>): Promise<T>;\n} \nexport class WebWorkerService implements IWebWorkerService {\n    private workerFunctionToUrlMap = new WeakMap<Function, string>();\n    private promiseToWorkerMap = new WeakMap<Promise<any>, Worker>();\n\n    run<T>(workerFunction: (any) => T, data?: any): Promise<T> {\n        const url = this.getOrCreateWorkerUrl(workerFunction);\n        return this.runUrl(url, data);\n    }\n    \n    runUrl(url: string, data?: any): Promise<any> {\n        const worker = new Worker(url);\n        const promise = this.createPromiseForWorker(worker, data);\n        const promiseCleaner = this.createPromiseCleaner(promise);\n        \n        this.promiseToWorkerMap.set(promise, worker);\n\n        /*\n        promise\n            .then(promiseCleaner)\n            .catch(promiseCleaner);\n            */\n        return promise;\n    }\n    \n    getWorker<T>(promise: Promise<T>): Worker {\n        return this.promiseToWorkerMap.get(promise);\n    }\n\n    terminate<T>(promise: Promise<T>): Promise<T> {\n        debugger;\n        return this.removePromise(promise);\n    }\n    \n    private createPromiseForWorker<T>(worker: Worker, data: any) {\n        return new Promise<T>((resolve, reject) => {\n            worker.addEventListener('message', (event) => resolve(event.data));\n            worker.addEventListener('error', reject);\n            worker.postMessage(data);\n        });\n    }\n    \n    private getOrCreateWorkerUrl(fn: Function): string {\n        if (!this.workerFunctionToUrlMap.has(fn)) {\n            const url = this.createWorkerUrl(fn);\n            this.workerFunctionToUrlMap.set(fn, url);\n            return url;\n        }\n        return this.workerFunctionToUrlMap.get(fn);\n    }\n\n    private createWorkerUrl(resolve: Function): string {\n        debugger;\n        const resolveString = resolve.toString();\n        \n        var webWorkerTemplate = '(' + resolveString + ')();';//resolveString.replace('function(){', '');\n        //webWorkerTemplate = webWorkerTemplate.substr(0, webWorkerTemplate.length - 1);\n\n        //const webWorkerTemplate =  '(function(){' + resolveString + '})()';\n        /*\n        `\n            self.addEventListener('message', function(e) {\n                postMessage((${resolveString})(e.data));\n            });\n        `\n        */\n\n/*\n        `\n            self.addEventListener('message', function(e) {\n                (${resolveString}(e.data));\n            });\n        `\n*/\n\n        ;\n        const blob = new Blob([webWorkerTemplate], { type: 'text/javascript' });\n        return URL.createObjectURL(blob);\n    }\n    \n    private createPromiseCleaner<T>(promise) : (T) => T {\n        return (event) => {\n            this.removePromise(promise);\n            return event;  \n        };\n    }\n    \n    private removePromise<T>(promise) : Promise<T> {\n        const worker = this.promiseToWorkerMap.get(promise);\n        if (worker) {\n            worker.terminate();\n        }\n        this.promiseToWorkerMap.delete(promise);\n        return promise;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/web-worker/web-worker.ts","import { Component, OnInit, ElementRef, ComponentRef, Input } from '@angular/core';\ndeclare var $:any;\n\n@Component({\n  selector: 'app-world-view',\n  templateUrl: './world-view.component.html',\n  styleUrls: ['./world-view.component.css'],\n  inputs: ['pixels', 'worldSize']\n})\nexport class WorldViewComponent implements OnInit {\n\n  pixels:Array<ArrayBuffer>;\n  worldSize:number;\n  private lastWidth:number = 0;\n  private lastHeight:number = 0;\n  private canvasOnScreen:HTMLCanvasElement;\n  private canvasOffScreen:HTMLCanvasElement;\n\n  private magnification:number = 5;\n  private magnificationSize: number = 20;\n  private magnificationX: number = 128;\n  private magnificationY: number = 128;\n  private mouseDown: boolean = false;\n  \n  constructor(private elementRef: ElementRef) {\n  }\n\n  ngOnInit() {  \n    this.canvasOffScreen = $(this.elementRef.nativeElement).find('.off-screen-canvas')[0]; \n    this.canvasOnScreen = $(this.elementRef.nativeElement).find('.on-screen-canvas')[0]; \n      \n/*\n const mouseDown$ = Observable.fromEvent(canvasNE, 'mousedown');\n      const mouseMove$ = Observable.fromEvent(canvasNE, 'mousemove');\n      const mouseUp$ = Observable.fromEvent(canvasNE, 'mouseup');\n\n      const moveUntilMouseUp$= mouseMove$.takeUntil(mouseUp$);\n      const startRotate$ = mouseDown$.switchMapTo(moveUntilMouseUp$.startWith(null));\n\n      const relativePoint = (start: MouseEvent, end: MouseEvent): {x:number, y:number} => \n      (start && end && {\n        dx: start.clientX - end.clientX,\n        dy: start.clientY - end.clientY,\n        start: start\n      } || {});\n\n      this.relativeTo$ = startRotate$\n        .combineLatest(mouseDown$)\n        .map(arr => relativePoint(arr[0],arr[1]));\n\n      this.rotateToAngle$ = this.relativeTo$\n        .map((tr) => ({angle: Math.atan2(tr.dy, tr.dx), start: tr.start}));\n        */\n  }\n\n   clicked(event) {\n     var size = $(this.canvasOnScreen).width();\n    this.magnificationX = 256 * event.clientX / size;\n    this.magnificationY = 256 * event.clientY / size;\n    event.preventDefault();\n  }\n\n  mousedown(event) {\n    this.mouseDown = true;\n    this.clicked(event);\n  }\n\n  mousemove(event) {\n    if (this.mouseDown) {\n      this.clicked(event);\n    }\n  }\n\n  mouseup(event) {\n    this.mouseDown = false;\n  }\n\n  ngOnChanges(changes) {\n    if (this.elementRef) {\n      this.updatePixels();\n    }\n  }\n\n\n  /**\n   * Resize the canvas to fit the parent container, if necessary\n   */\n  ngDoCheck() {\n    if (! this.canvasOffScreen) {\n    }\n    if (! this.canvasOnScreen) {\n    }\n\n    var parent = $(this.elementRef.nativeElement).parent();\n\n    // because every application needs some ugly magic numbers in it:\n    var w:number = parent.width() - 20; \n    var h:number = parent.height() - 20;\n    // (without that adjustment, things vibrate in a funky way and cause seizures)\n\n    if (w != this.lastWidth || h != this.lastHeight) {\n      this.lastWidth = w;\n      this.lastHeight = h;\n    }\n\n    var dim = Math.min(w,h);\n    $(this.canvasOnScreen).css({width: (dim + 'px'), height: (dim + 'px')}); \n    $(this.canvasOffScreen).css({width: (dim + 'px'), height: (dim + 'px')}); \n  }\n\n  /**\n   * Copy from the pixels buffer to the canvas\n   */\n  private updatePixels() {\n      if (this.pixels && this.pixels.length) {\n\n      var inBuffer: ArrayBuffer = this.pixels[0];\n\n      var canvas: HTMLCanvasElement = this.canvasOffScreen;\n      if (canvas) {\n        var ctx: CanvasRenderingContext2D = canvas.getContext('2d');\n        var dim = this.worldSize;//Math.sqrt(inBuffer.byteLength/4);\n\n        var imageData: ImageData = ctx.createImageData(dim, dim);\n        var test = true;\n        if (test) {\n          var buf8:any = new Uint8ClampedArray(inBuffer);\n          imageData.data.set(buf8);\n        }\n        else {\n          var iOut = 0;\n          for (var iIn: number = 0; iIn < inBuffer.byteLength; iIn++) {\n            imageData.data[iOut++] = inBuffer[iIn];\n          }\n        }\n        ctx.putImageData(imageData, 0, 0);\n        ctx.webkitImageSmoothingEnabled = false;\n        (<any>ctx).mozImageSmoothingEnabled = (<any>ctx).msImageSmoothingEnabled = (<any>ctx).webkitImageSmoothingEnabled = \n          (<any>ctx).imageSmoothingEnabled = false;\n\n        if (this.magnification > 1) {\n          var srcX = this.magnificationX - this.magnificationSize / 2;\n          var srcY = this.magnificationY - this.magnificationSize / 2;\n          var destX = this.magnificationX - this.magnificationSize / 2 * this.magnification;\n          var destY = this.magnificationY  - this.magnificationSize / 2 * this.magnification;\n          var destSize = this.magnification * this.magnificationSize;\n\n          ctx.drawImage(canvas,srcX,srcY,this.magnificationSize,this.magnificationSize,\n            destX,destY,destSize, destSize);\n          ctx.strokeStyle = '#ffffff';\n          ctx.lineWidth = 2;\n          ctx.strokeRect(destX, destY, destSize, destSize);\n        }\n      }\n\n      this.canvasOnScreen.getContext('2d').drawImage(canvas, 0, 0, 256, 256, 0, 0, 256, 256);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/world-view/world-view.component.ts","export const environment = {\n  production: true\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.prod.ts","/// <reference path='color.ts'/>\n\nimport {Color} from \"./color\";\n\n//namespace LibSim {\n\n\texport class GenomeColorMap {\n\n\t\tprivate static colorIndex: number = 0;\n\t\tprivate static colors = [\n\t\t/*RED\"*/\t\t\tnew Color ( 0xFF, 0x00, 0x00 ),\n\t\t/*BLUE\"*/\t\t    new Color ( 0x00, 0x00, 0xFF ),\n\t\t/*LIGHT_BLUE\" */\tnew Color ( 0x80, 0x80, 0xFF ),\n\t\t/*PINK\"*/   \t\tnew Color ( 0xFF, 0x00, 0xFF ),\n\t\t/*MAROON\"*/\t    \tnew Color ( 0x80, 0x00, 0x00 ),\n\t\t/*BROWN\"*/\t    \tnew Color ( 110,\t50, 20 ),\n\t\t/*OLIVE\"*/  \t\tnew Color ( 0x80, 0x80, 0x00 ),\n\t\t/*NAVY\"*/   \t\tnew Color ( 0x00, 0x00, 0x80 ),\n\t\t/*PURPLE\"*/ \t\tnew Color ( 0x80, 0x00, 0x80 ),\n\t\t/*TEAL\"*/   \t\tnew Color ( 0x00, 0x80, 0x80 ),\n\t\t/*GRAY\"*/   \t\tnew Color ( 0x80, 0x80, 0x80 ),\n\t\t/*ORANGE\"*/\t    \tnew Color ( 0xFF, 0x80, 0x00 ),\n\n\t\t/*SKY\"*/\t\t\tnew Color (  93, 186, 202 ),\n\t\t/*GLASS\"*/\t\t    new Color ( 153, 204, 204 ),\n\t\t/*MARIGOLD\"*/   \tnew Color ( 255, 175,  24 ),\n\t\t/*LAVENDER\"*/   \tnew Color ( 187,  86, 195 ),\n\t\t/*VIOLET\"*/\t    \tnew Color (  89,  24, 187 )\n\t\t];\n\n\t\tprivate static _genomeColorMap:{[genome: string]: Color} = {\n\t\t\t\"*\": new Color(0, 255, 0)\n\t\t};\n\n\t\tstatic getColorForGenome(genome:string) {\n\t\t\tvar result = GenomeColorMap._genomeColorMap[genome];\n\t\t\tif (! result) {\n\t\t\t\tresult = GenomeColorMap.colors[GenomeColorMap.colorIndex];\n\t\t\t\tGenomeColorMap._genomeColorMap[genome] = result;\n\t\t\t\tGenomeColorMap.colorIndex = (GenomeColorMap.colorIndex + 1) % GenomeColorMap.colors.length;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t}\n//}\n\n\n// WEBPACK FOOTER //\n// ./src/simulation/genome-color-map.ts","import { NgModule } from '@angular/core';\n\nimport { WorldParameters } from './world-parameters';\nimport { WorldRenderData } from './world-render-data';\nimport { WorldRunner } from './world-runner';\nimport { InstructionsAll } from './instructions-all';\nimport { Instruction } from './instruction';\n\n@NgModule({\n    declarations: [\n    ],\n    imports: [\n    ],\n    exports: [\n    \tWorldParameters,\n      WorldRenderData,\n      WorldRunner,\n      InstructionsAll\n    ]\n})\nexport class SimulationModule { }\n\nexport * from './world-parameters';\nexport * from './world-render-data';\nexport * from './world-runner';\nexport * from './instructions-all';\nexport * from './instruction';\n\n\n\n// WEBPACK FOOTER //\n// ./src/simulation/lib.module.ts","/// <reference path='point.ts'/>\n/// <reference path='world.ts'/>\n/// <reference path='element.ts'/>\n/// <reference path='instruction.ts'/>\n/// <reference path='utils.ts'/>\n/// <reference path='genome-color-map.ts'/>\n\nimport { Element } from './element';\nimport { ElementType } from './element';\nimport { World } from './world';\nimport { Point } from './point';\nimport { GenomeColorMap } from './genome-color-map';\nimport { Instruction } from './instruction';\nimport { Utils } from './utils';\nimport { InstructionResult } from './instruction';\n\n\n//module LibSim {\n\n    export class Organism {\n        // recycle unused elements to reduce garbage collection\n        static headElementInactive: Element = null;\n\n        genome: string;\n        headSegment: Element;\n        tailSegment: Element;\n        activeSegment: Element;\n        colorRGBA: number;\n\n        // which way is the head pointing?\n        headOrientation:number;\n        headDirectionX: number;\n        headDirectionY: number;\n\n        // lifespan:\n        lifespan: number;\n\n        energy: number;\n        numExposedPhotosynthesizeCells:number = 0;\n        sleepCount: number = 0;\n        wasBlocked:boolean;\n        instructionsPerTurn: number = 1;\n\n        // for the linked list\n        next:Organism;\n        prev:Organism;\n\n        constructor(genome:string, location:Point, world:World) {     \n            this.next = this.prev = null;\n            this.headSegment = this.tailSegment = this.activeSegment = null;\n            this.initialize(genome, location, world);   \n        }\n\n        reset():void {\n            // return all elements to the recycle pool\n            var element:Element = this.headSegment;\n            while (element) {\n                var nextElement:Element = element.next;\n                element.next = Organism.headElementInactive;\n                Organism.headElementInactive = element;\n                element = nextElement;\n                Organism.headElementInactive.reset();\n            }\n            this.headSegment = this.tailSegment = this.activeSegment = null;\n            this.next = this.prev = null;\n            this.numExposedPhotosynthesizeCells = 0;\n            this.sleepCount = 0;\n            this.instructionsPerTurn = 0;\n        }\n\n        initialize(genome:string, location:Point, world:World): void {\n            this.genome = genome;\n            for (var i:number = 0; i < genome.length; i++) {\n                var element:Element = this.addSegment(genome[i], location, world, i > 0);\n            }\n            if (genome[0] === '*') {\n                this.numExposedPhotosynthesizeCells = 1;\n            }\n\n            this.energy = 100 * genome.length;\n            this.lifespan = world.parameters.lifespanPerSegment * genome.length;\n\n            var randomizationLifespace = 1 +\n                Utils.randRangeInt(-world.parameters.lifespanRandomizationPercent, world.parameters.lifespanRandomizationPercent) / 100;\n            this.lifespan *= randomizationLifespace;\n\n            this.randomizeOrientation();\n\n            // get the color to use to display this genome\n            this.colorRGBA = GenomeColorMap.getColorForGenome(genome).rgba;\n        }\n\n        addSegment(code:string, location:Point, world:World, isOccluded:boolean):Element {\n            \n            var instruction:Instruction = Instruction.instructionFromCode(code);\n            if (! instruction) {\n                throw \"Unknown instruction: \" + code;\n            }\n\n            var element:Element;\n            var type:ElementType = (code == \"*\") ? ElementType.FOOD : ElementType.ORGANISM;\n            if (Organism.headElementInactive) {\n                element = Organism.headElementInactive;\n                Organism.headElementInactive = Organism.headElementInactive.next;\n                element.initialize(type, this);\n            }\n            else {\n                element = new Element(type, this);\n            }\n\n            element.isOccluded = isOccluded;\n            element.instruction = instruction;\n            \n            if (! this.headSegment) {\n                this.headSegment = element;\n            }\n            if (this.tailSegment) {\n                this.tailSegment.next = element;\n            }\n            this.tailSegment = element;\n\n            if (isOccluded) {\n                element.locationX = location.x; \n                element.locationY = location.y; \n            }\n            else {\n                world.put(location.x, location.y, element);\n            }\n            return element;\n        }\n\n\n        /**\n         * Execute the action of the current segment and make the next segment active\n         */\n        turnCrank(world:World) {\n            var count = this.instructionsPerTurn;\n\n            --this.lifespan;\n            if (this.numExposedPhotosynthesizeCells) {\n                this.energy += world.parameters.energyGainedFromPhotosythesizing +\n                    (this.numExposedPhotosynthesizeCells - 1) * (world.parameters.energyGainedFromPhotosythesizing - world.parameters.energyTurnCost);\n            }\n\n            while (count--) {\n                if (this.sleepCount) {\n                    --this.sleepCount;\n                    ++this.lifespan;\n                    continue;\n                }\n                if (! this.activeSegment) {\n                    this.activeSegment = this.headSegment;\n                    this.instructionsPerTurn = 1;\n                }\n                // adjust organism's energy by the instruction's impact\n                this.energy -= world.parameters.energyTurnCost;\n\n                // perform action\n                var result = this.activeSegment.instruction.do(this, world, this.activeSegment);\n                 \n                if ( result !== InstructionResult.DONT_ADVANCE) {\n\n                    // advance to the next segment/instruction\n                    if (this.activeSegment) {\n                        this.activeSegment = this.activeSegment.next;\n                    }\n                }\n\n                if (result == InstructionResult.EXECUTE_AGAIN && this.activeSegment) {\n                    ++count;\n                }\n            }\n        }\n\n\n        randomizeOrientation() {\n            this.setOrientation(Utils.randRangeInt(0, 4) % 3);\n        }\n\n        setOrientation(orientation:number) {\n            this.headOrientation = orientation;\n            switch (orientation) {\n                default:\n                    this.headDirectionX = 0;\n                    this.headDirectionY = -1;\n                    break;\n                case 1:\n                    this.headDirectionX = 1;\n                    this.headDirectionY = 0;\n                    break;\n                case 2:\n                    this.headDirectionX = 0;\n                    this.headDirectionY = 1;\n                    break;\n                case 3:\n                    this.headDirectionX = -1;\n                    this.headDirectionY = 0;\n                    break;\n            }\n        }\n\n\n        move(world:World, andEat:Boolean) {\n            this.wasBlocked = false;\n\n            this.energy -= andEat ? world.parameters.energyMoveAndEatCost : world.parameters.energyMoveCost;\n\n            //var worldSize:number = world.parameters.size;\n\n            var destinationX:number = (this.headSegment.locationX + this.headDirectionX) & 255;\n            var destinationY:number = (this.headSegment.locationY + this.headDirectionY) & 255;\n\n            var elementAtDestination:Element = world.get(destinationX, destinationY);\n\n            if (elementAtDestination == null) {\n                // there was nothing in the way, so move\n                var element:Element = this.headSegment;\n\n                var index = 0;\n                while (element) {\n                    var lastX:number = element.locationX;\n                    var lastY:number = element.locationY;\n\n                    world.put(destinationX, destinationY, element);\n                    if (element.isOccluded) {\n                        if (element.instruction.code === '*') {\n                            ++this.numExposedPhotosynthesizeCells;\n                        }\n                        element.isOccluded = false;\n                        break;\n                    }\n                    \n                    destinationX = lastX;\n                    destinationY = lastY;\n                    element = element.next;\n\n                    if (! element) {\n                        world.put(destinationX, destinationY, null);\n                    }\n                }\n            }\n            else {\n                this.wasBlocked = true;\n                if (andEat && elementAtDestination.organism != this) {\n                    switch (elementAtDestination.type) {\n                        case ElementType.FOOD:\n                            this.wasBlocked = false;\n                            if (elementAtDestination.organism) {\n\n                                var energyGain =\n                                    Math.max(0 /*world.parameters.lifespanPerSegment*/, \n                                        Math.min(elementAtDestination.organism.energy, world.parameters.biteStrength));\n                                this.energy += energyGain * world.parameters.digestionEfficiency / 100;\n                                elementAtDestination.organism.energy -= world.parameters.biteStrength;\n                                if (elementAtDestination.organism.energy < 0) {\n                                    world.killOrganism(elementAtDestination.organism, true);\n                                }\n                            }\n                            else {\n                                this.energy += world.parameters.biteStrength;\n                                world.put(destinationX, destinationY, null);\n                            }\n                            break;\n\n                        case ElementType.ORGANISM:\n                        /*\n                            if (elementAtDestination.organism != this) {\n                                this.energy += world.parameters.energyGainedFromEating;\n                                elementAtDestination.organism.energy -= world.parameters.energyGainedFromEating;;\n                            }\n                            */\n                            break;\n                    }\n                }\n            }\n\n            // validate\n            var validateOrganismAfterMove:Boolean = false;//true;\n            var validateBoardAfterMove:Boolean = false;\n\n            var locationMap:any = {};\n            if (validateOrganismAfterMove) {\n                var element:Element = this.headSegment;\n\n                var index = 0;\n                while (element) {\n                    var key:string = element.locationX + ',' + element.locationY;\n                    locationMap[key] = true;\n\n                    if (! element.isOccluded) {\n                        if (world.get(element.locationX, element.locationY).organism != this) {\n                            debugger;\n                        }\n                    }\n                    if (! element.next && element != this.tailSegment) {\n                        debugger;\n                    }\n                    element = element.next;\n                }\n            }\n\n            if (validateBoardAfterMove) {\n                for (var x = 0; x < 256; x++) {\n                    for (var y = 0; y < 256; y++) {\n                        element = world.get(x, y);\n                        if (element && element.organism == this) {\n                            \n                            var key:string = x + ',' + y;\n                            if (! locationMap[key]) {\n                                debugger;\n                            }\n                        }\n                    }\n                }\n            }\n\n        }\n\n\n        testIfFacing(elementType:ElementType, world:World, distance:number = 10): boolean {\n\n            var locationX:number = this.headSegment.locationX;\n            var locationY:number = this.headSegment.locationY;\n\n            var photosynthesizeInstruction = Instruction.instructionFromCode('*');\n\n            //var worldSize:number = world.parameters.size;\n\n            while (distance--) {\n                locationX = (locationX + this.headDirectionX) & 255; // wrap\n                locationY = (locationY + this.headDirectionY) & 255;\n                var element = world.get(locationX, locationY);\n                if (element) {\n                    if (element.organism == this) {\n                        return false; // we saw ourselves, so no\n                    }\n                    if (element.type == elementType) {\n                        return true;\n                    }\n                    /*\n                    else if (elementType == ElementType.FOOD && element.instruction == photosynthesizeInstruction) {\n                        return true;\n                    }\n                    */\n                }\n            }\n            return false;\n        }\n\n        doNotIf():void {\n            //this.energy += 1;\n            // for now, just skip an instruction\n            if (this.activeSegment) {\n                var next:Element = this.activeSegment.next;\n                \n                // search for Else instruction\n                var testNext:Element = this.activeSegment.next;\n                while (testNext) {\n                    if (testNext.instruction.code == 'e') {\n                        next = testNext;\n                        break;\n                    }\n                    testNext = testNext.next;\n                } \n                this.activeSegment = next;\n                if (this.activeSegment) {\n                    this.activeSegment = this.activeSegment.next;\n                }\n            }\n        }\n\n        getSpawnEnergy(world:World):number {\n            return world.parameters.spawnEnergyPerSegment * this.genome.length;\n        }\n\n        spawnIfAble(world:World) {\n            if (this.energy < this.getSpawnEnergy(world)) {\n                return;\n            }\n\n            // start with a copy of the parent's genome\n            var genome:string = this.genome;\n\n            // possibly mutate the genome of the offspring\n            var mutationChance = Utils.randRangeInt(0, 100);\n            if (mutationChance < world.parameters.mutationRate) {\n                genome = this.mutateGenome(genome);\n            }\n\n            // create the child just behind the tail\n            //var worldSize:number = world.parameters.size;\n\n            var locationX = (this.tailSegment.locationX - this.headDirectionX) & 255;\n            var locationY = (this.tailSegment.locationY - this.headDirectionY) & 255;\n\n            if (world.get(locationX, locationY) != null) {\n                for (var dx:number = -1; dx <= 1; dx++) {\n                    for (var dy:number = -1; dy <= 1; dy++) {\n                        var nx = (this.tailSegment.locationX + dx) & 255;\n                        var ny = (this.tailSegment.locationY + dy) & 255;\n                        if (dx && dy && world.get(nx, ny) == null) {\n                            locationX = nx;\n                            locationY = ny;\n                            dx = 10;\n                            break;\n                        }\n                    }\n                } \n            }\n            if (world.get(locationX, locationY) == null) {\n                var child:Organism = new Organism(genome, new Point(locationX, locationY), world);\n\n                // divide the energy between the parent and the child\n                this.energy = child.energy = this.energy / 2;\n\n                world.addOrganism(child);\n            }\n            else {\n                //this.energy /= 2;\n            }\n        }\n\n        private mutateGenome(genome:string): string {\n\n            // 0 = random insertion\n            // 1 = random deletion\n            // 2 = random change of existing instruction\n            // 3 = random swapping of two adjacent instructions\n            var mutationType = Utils.randRangeInt(0,3);\n\n            var allInstructions:string = Instruction.allCodes;\n\n            var newGenome = '';\n            switch (mutationType) {\n                case 0:\n                // copy the genome, randomly inserting one instruction\n                    var whereIndex = Utils.randRangeInt(0, genome.length);\n                    for (var i = 0; i <= genome.length; i++) {\n                        if (i == whereIndex) {\n                            newGenome += allInstructions[Utils.randRangeInt(0, allInstructions.length - 1)];\n                        }\n                        if (i < genome.length) {\n                            newGenome += genome[i];\n                        }\n                    }\n                    break;\n\n                case 1:\n                    // randomly remove one instruction (if there's more than one to begin with)\n                    if (genome.length == 1) {\n                        newGenome = genome;\n                    }\n                    else {\n                        var whereIndex = Utils.randRangeInt(0, genome.length - 1);\n                        for (var i = 0; i < genome.length; i++) {\n                            if (i != whereIndex) {\n                                newGenome += genome[i];\n                            }\n                        }\n                    }\n                    break;\n\n                case 2:\n                    // randomly change an existing instruction\n                    var whereIndex = Utils.randRangeInt(0, genome.length - 1);\n                    for (var i = 0; i < genome.length; i++) {\n                        if (i == whereIndex) {\n                            newGenome += allInstructions[Utils.randRangeInt(0, allInstructions.length - 1)];\n                        }\n                        else {\n                            newGenome += genome[i];\n                        }\n                    }\n                    break;\n\n                case 3:\n                    // randomly swap two instructions\n                    if (genome.length == 1) {\n                        newGenome = genome;\n                    }\n                    else if (genome.length == 2) {\n                        newGenome = genome[1] + genome[0];\n                    }\n                    else {\n                        var whereIndex = Utils.randRangeInt(0, genome.length - 2);\n                        for (var i = 0; i < genome.length; i++) {\n                            if (i == whereIndex) {\n                                // swap\n                                newGenome += genome[i+1] + genome[i];\n                                ++i;\n                            }\n                            else {\n                                newGenome += genome[i];\n                            }\n                        }\n                    }\n                    break;\n            \n            }\n            //return newGenome.substr(0,1);\n            return newGenome;\n        }\n        \n\n\n    }\n//}\n\n\n\n// WEBPACK FOOTER //\n// ./src/simulation/organism.ts","import { WorldParameters } from './world-parameters';\nimport { Element } from './element';\nimport { ElementType } from './element';\nimport { Instruction } from './instruction';\nimport { InstructionsAll } from './instructions-all';\nimport { Organism } from './organism';\nimport { Point } from './point';\nimport { Utils } from './utils';\n\n//module LibSim {\n    export class World {\n        readonly MAX_WORLD_SIZE : number = 256;//1024;\n        elements : Element[][];\n        parameters: WorldParameters;\n        headOrganism: Organism;\n        numOrganisms: number = 0;\n        turn: number = 1;\n\n        foodElement:Element = new Element(ElementType.FOOD);\n        barrierElement:Element = new Element(ElementType.BARRIER);\n\n        // recycle killed organisms to reduce garbage collection\n        headOrganismInactive: Organism;\n\n        newObstacles:any = undefined;\n\n        constructor(parameters: WorldParameters) {\n            \n            new InstructionsAll();\n\n            this.parameters = parameters;\n\n            this.elements = [];\n            for (var i: number = 0; i < this.MAX_WORLD_SIZE; i++) {\n                this.elements.push([]);\n\n                for (var j: number = 0; j < this.MAX_WORLD_SIZE; j++) {\n                    this.elements[i].push(null);\n                }\n            }\n\n            this.reset();\n        }\n\n        /**\n         * Remove all elements and organisms from the board\n         */\n        reset(): void {\n            for (var i: number = 0; i < this.MAX_WORLD_SIZE; i++) {\n                for (var j: number = 0; j < this.MAX_WORLD_SIZE; j++) {\n                    this.elements[i][j] = null;\n                }\n            }\n            this.headOrganism = null;\n            this.headOrganismInactive = null;\n            this.numOrganisms = 0;\n\n            //var organism:Organism = this.createOrganism(\"M*MM\", this.getEmptyLocation());\n\n            for (var i: number = 0; i < this.parameters.initialFoodCount; i++) {\n                var location: Point = this.getEmptyLocation();\n\n                var organism:Organism = this.createOrganism(\"*\", location);\n                organism.energy = Utils.randRangeInt(-1000, organism.getSpawnEnergy(this));\n            }\n            /*\n            organism.energy = Utils.randRangeInt(0, organism.getSpawnEnergy(this));\n\n            for (var i: number = 0; i < this.parameters.initialFoodCount; i++) {\n                var location: Point = this.getEmptyLocation();\n\n                var organism:Organism = this.createOrganism(\"M\", location);\n                organism.energy = Utils.randRangeInt(0, organism.getSpawnEnergy(this));\n            }\n            */\n        }\n\n        validate(): void {\n            var organism:Organism = this.headOrganism;\n            while (organism) {\n                var segment:Element = organism.headSegment;\n                var lastX = segment.locationX;\n                var lastY = segment.locationY;\n                while (segment) {\n                    if (segment.organism != organism) {\n                        throw \"segment organism bad\";                        \n                    }\n                    var elementAtPosition = this.elements[segment.locationX][segment.locationY];\n                    if (! elementAtPosition) {\n                        throw \"`xxx`\";\n                    }\n                    if (elementAtPosition.organism != organism) {\n                        throw \"board is bad\";\n                    }\n                    if (elementAtPosition.isOccluded) {\n                        throw \"element is occluded\";\n                    }\n\n                    segment = segment.next;\n\n                    if (segment) {\n                        if (segment.locationX == lastX && segment.locationY == lastY) {\n                            if (! segment.isOccluded) {\n                                throw \"should be occluded\";\n                            }\n                        }\n                        else {\n                            if (segment.isOccluded) {\n                                debugger;\n                                throw \"incorrectly occluded\";\n                            }\n                        }\n                        lastX = segment.locationX;\n                        lastY = segment.locationY;\n                    }\n                }\n\n                organism = organism.next;\n            }\n        }\n\n        /**\n         * Find and return an empty location on the board\n         */\n        getEmptyLocation(): Point {\n            var result : Point = new Point();\n\n            while (true) { // assume there will always be some empty location on the board\n                result.randomize(WorldParameters.WORLDSIZE);\n                if (this.elements[result.x][result.y] == null) {\n                    return result;\n                }\n            }\n        }\n\n        /**\n         * Put an element on the board\n         */\n        put(x:number, y:number, element:Element) {\n            \n            x &= 255;\n            y &= 255;\n\n                this.elements[x][y] = element;\n/*\n            if (element == null || ! this.elements[x][y]) {\n                this.elements[x][y] = element;\n            }\n            else {\n                if (element.organism != this.elements[x][y].organism) {\n                        debugger;\n                    throw \"WHAT???\"\n                }\n            }\n*/            \n            if (element) {\n                element.locationX = x;\n                element.locationY = y;\n            }\n        }\n\n        /**\n         * Get an element from the board\n         */\n        get(x:number, y:number):Element {\n            //x = (x + this.parameters.size) % this.parameters.size;\n            //y = (y + this.parameters.size) % this.parameters.size;\n            return this.elements[x & 255][y & 255];\n        }\n\n\n        /**\n         * Process the actions of all organisms on the board\n         */\n\n        \n        turnCrank(): void {\n            this.prepareObstacles();\n\n            var organism:Organism = this.headOrganism;\n\n            //console.log(\"turn #\" + this.turn++);\n            ++this.turn;\n            var i = 0;\n\n            while (organism) {\n                if (i > 65535) {\n                    debugger;\n                }\n//                var nextOrganism:Organism = organism.next;\n                //this.validate();\n                // die if energy is below zero\n                var nextOrganism:Organism;\n                nextOrganism = undefined;\n                if ((organism.energy < 0 && organism.genome != '*') || organism.lifespan < 0) {\n                    nextOrganism = organism.next;\n                    this.killOrganism(organism);\n                }\n                else {\n                    organism.turnCrank(this);\n                    // spawn if energy is above threshhold\n                    if (this.numOrganisms < this.parameters.maximumOrganisms) {\n                        organism.spawnIfAble(this);\n                    }\n                }\n                if (nextOrganism !== undefined) {\n                    organism = nextOrganism;\n                }\n                else {\n                    organism = organism.next;\n                }\n                ++i;\n            }\n\n\n            if ((this.turn % 100) == 0) {\n                //this.validate();\n            }\n\n            if (this.parameters.foodDropSpeed) {\n                if (this.parameters.foodDropSpeed >= 99 || ((this.turn % (100-this.parameters.foodDropSpeed)) == 0)) {\n                    for (var i = 0; i < 5; i++) {\n                        var location: Point = this.getEmptyLocation();\n                        this.put(location.x, location.y, this.foodElement);\n                    }\n                }\n            }\n        }\n\n        insert(genome:string) {\n            var location: Point = this.getEmptyLocation();\n            this.createOrganism(genome,location);\n        }\n\n        createOrganism(genome:string, location:Point):Organism {\n            // ensure the world position is empty\n            if (this.elements[location.x][location.y]) {\n                return null;\n            }\n\n            // create the new organism and its segments\n\n            var organism:Organism;\n            var recycle:boolean = true;\n            if (recycle && this.headOrganismInactive) {\n                organism = this.headOrganismInactive;\n                this.headOrganismInactive = this.headOrganismInactive.next;\n                organism.next = organism.prev = null;\n                organism.initialize(genome,location, this);\n            }\n            else {\n                organism = new Organism(genome, location, this);\n            }\n            this.addOrganism(organism);\n            return organism;\n        }\n\n        /**\n         * Link the organism into the world\n         */\n        addOrganism(organism:Organism) {\n\n            ++this.numOrganisms;\n\n            var oldHead:Organism = this.headOrganism;\n            this.headOrganism = organism;\n            if (oldHead) {\n                oldHead.prev = organism;\n                organism.next = oldHead;\n            }\n        }\n\n        killOrganism(organism:Organism, wasEaten:Boolean = false) {\n\n            --this.numOrganisms;\n\n            if (organism == this.headOrganism) {\n                this.headOrganism = organism.next;\n                if (this.headOrganism) {\n                    this.headOrganism.prev = null;\n                }\n            }\n            else {\n                if (organism.next) {\n                    organism.next.prev = organism.prev;\n                }\n                if (organism.prev) {\n                    organism.prev.next = organism.next;\n                }\n            }\n\n            var segment:Element = organism.headSegment;\n            if (organism.genome == '*') {\n                this.put(segment.locationX, segment.locationY, null);\n                return;\n            }\n\n            while (segment) {\n                this.put(segment.locationX, segment.locationY, null);\n                segment = segment.next;\n            }\n\n            segment = organism.headSegment;\n\n            while (segment) {\n                if (segment.isOccluded) {\n                    break;\n                }\n\n                if (! wasEaten) {\n                    this.put(segment.locationX, segment.locationY, this.foodElement);\n                }\n\n                segment = segment.next;\n            }\n\n            organism.reset();\n            organism.next = this.headOrganismInactive;\n            this.headOrganismInactive = organism;\n        }\n\n        setObstacles(obstacles:number):void {\n            this.newObstacles = obstacles;\n        }\n\n        private prepareObstacles(): void {\n            if (this.newObstacles === undefined) {\n                return;\n            }\n            var obstacles = this.newObstacles;\n            this.newObstacles = undefined;\n\n            // clear existing obstacles\n            for (var x: number = 0; x < this.MAX_WORLD_SIZE; x++) {\n                for (var y: number = 0; y < this.MAX_WORLD_SIZE; y++) {\n                    if (this.elements[x][y] && this.elements[x][y].type == ElementType.BARRIER) {\n                        this.put(x,y,null);\n                    }\n                }\n            }\n\n            var points:Point[] = [];\n            switch (obstacles) {\n                case 1:\n                    for (var a = 0; a < 124; a++) {\n                        points.push(new Point(a,a));\n                        points.push(new Point(255-a,a));\n                        points.push(new Point(a,255-a));\n                        points.push(new Point(255-a,255-a));\n                    }\n                    break;\n                case 2:\n                    for (var a = 2; a < 254; a++) {\n                        points.push(new Point(a,2));\n                        points.push(new Point(a,253));\n                        points.push(new Point(2,a));\n                        points.push(new Point(253,a));\n                    }\n                    break;\n            }\n\n            var self = this;\n\n            points.forEach(function(point:Point) {\n                if (self.elements[point.x][point.y] && self.elements[point.x][point.y].organism) {\n                    self.killOrganism(self.elements[point.x][point.y].organism, true);\n                }\n                self.put(point.x, point.y, self.barrierElement);\n            });\n        }\n    }\n//}\n\n\n// WEBPACK FOOTER //\n// ./src/simulation/world.ts","module.exports = \".top-ten-list{\\n    padding:10px;\\n}\\n\\n.top-ten-list .header-row{\\n    background:#eeeeee;\\n    font-size:80%;\\n}\\n\\n.top-ten-list .entry-row{\\n    background:#ffffff;\\n    background:-webkit-linear-gradient(top,  #ffffff 0%,#f0f0f0 97%,#fafafa 100%);\\n    background:linear-gradient(to bottom,  #ffffff 0%,#f0f0f0 97%,#fafafa 100%);\\n    filter:progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#fafafa',GradientType=0 );\\n}\\n\\n.top-ten-list td, .top-ten-list th{\\n    padding:4px;\\n}\\n\\n.top-ten-list td:nth-child(1), .top-ten-list th:nth-child(1){\\n    width:20px;\\n}\\n\\n.top-ten-list td:nth-child(2), .top-ten-list th:nth-child(2){\\n    width:50px;\\n}\\n\\n.top-ten-list .genomeColor{\\n    position:relative;\\n    width:16px;\\n    height:16px;\\n}\\n\\n.param-label{\\n    width:140px;\\n    padding-top:5px;\\n    text-align:right;\\n    font-size:80%;\\n}\\n\\n.param-row{\\n    margin-bottom:0!important;\\n}\\n\\n.param-label{\\n    max-width:150px;\\n}\\n\\n.user-genome{\\n    width:150px;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 634\n// module chunks = 0","module.exports = \".off-screen-canvas{\\n    display:none;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/world-view/world-view.component.css\n// module id = 635\n// module chunks = 0","module.exports = \"<div class=\\\"fluid-container\\\">\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col s6\\\">\\n      <app-world-view [pixels]=\\\"renderPixels\\\" worldSize=\\\"256\\\"></app-world-view>\\n\\n      <!-- GENERAL PARAMETERS -->\\n      <!--   SPEED: -->\\n      <div class=\\\"row param-row\\\">\\n        <div class=\\\"col param-label\\\">Speed:</div>\\n        <div class=\\\"col s6\\\"><input [(ngModel)]=\\\"params.speed\\\" type=\\\"range\\\" name=\\\"points\\\" min=\\\"0\\\" max=\\\"10\\\"></div>\\n        <div class=\\\"col s2\\\">{{params.speed}}</div>\\n      </div>\\n\\n      <!--   MUTATION RATE: -->\\n      <div class=\\\"row param-row\\\">\\n        <div class=\\\"col param-label\\\">Mutation rate:</div>\\n        <div class=\\\"col s6\\\"><input [(ngModel)]=\\\"params.mutationRate\\\" type=\\\"range\\\" name=\\\"points\\\" min=\\\"0\\\" max=\\\"50\\\"></div>\\n        <div class=\\\"col s2 param-label\\\">{{params.mutationRate}}%</div>\\n      </div>\\n\\n      <!--   FOOD DROP RATE: -->\\n      <div class=\\\"row param-row\\\">\\n        <div class=\\\"col param-label\\\">Food drop rate:</div>\\n        <div class=\\\"col s6\\\"><input [(ngModel)]=\\\"params.foodDropSpeed\\\" type=\\\"range\\\" name=\\\"points\\\" min=\\\"0\\\" max=\\\"100\\\"></div>\\n        <div class=\\\"col s2 param-label\\\">{{params.foodDropSpeed}}%</div>\\n      </div>\\n\\n      <div class=\\\"row param-row\\\">\\n        <div class=\\\"col param-label\\\">Obstacles:</div>\\n        <div class=\\\"col s6\\\"><input [(ngModel)]=\\\"obstacles\\\" (ngModelChange)=\\\"onObstacleChange($event)\\\"\\n           type=\\\"range\\\" name=\\\"points\\\" min=\\\"0\\\" max=\\\"2\\\"></div>\\n        <div class=\\\"col s2 param-label\\\">{{(obstacles==0) ? 'None' : (\\\"#\\\" + obstacles)}}</div>\\n      </div>\\n\\n\\n      <!-- ADVANCED SETTINGS -->\\n      <ul materialize=\\\"collapsible\\\" class=\\\"collapsible\\\" data-collapsible=\\\"accordion\\\">\\n        <li>\\n          <div class=\\\"collapsible-header\\\"><i class=\\\"material-icons\\\">settings</i>Advanced Settings</div>\\n          <div class=\\\"collapsible-body\\\">\\n    \\n            <div class=\\\"row param-row\\\">\\n              <div class=\\\"col param-label\\\">Spawn energy:</div>\\n              <div class=\\\"col s6\\\"><input [(ngModel)]=\\\"params.spawnEnergyPerSegment\\\" type=\\\"range\\\" name=\\\"points\\\" min=\\\"50\\\" max=\\\"500\\\"></div>\\n              <div class=\\\"col s2  param-label\\\">{{params.spawnEnergyPerSegment}} per segment</div>\\n            </div>\\n    \\n            <div class=\\\"row param-row\\\">\\n              <div class=\\\"col param-label\\\">Lifespan:</div>\\n              <div class=\\\"col s6\\\"><input [(ngModel)]=\\\"params.lifespanPerSegment\\\" type=\\\"range\\\" name=\\\"points\\\" min=\\\"5000\\\" max=\\\"50000\\\"></div>\\n              <div class=\\\"col s2 param-label\\\">{{params.lifespanPerSegment}} per segment</div>\\n            </div>\\n    \\n            <div class=\\\"row param-row\\\">\\n              <div class=\\\"col param-label\\\">Photosynthesis gain:</div>\\n              <div class=\\\"col s6\\\"><input [(ngModel)]=\\\"params.energyGainedFromPhotosythesizing\\\"\\n                type=\\\"range\\\" name=\\\"points\\\" min=\\\"1\\\" max=\\\"3\\\" step=\\\".05\\\"></div>\\n              <div class=\\\"col s2 param-label\\\">{{(params.energyGainedFromPhotosythesizing - 1) | number:'1.2-2'}}</div>\\n            </div>\\n    \\n            <div class=\\\"row param-row\\\">\\n              <div class=\\\"col param-label\\\">Move cost:</div>\\n              <div class=\\\"col s6\\\"><input [(ngModel)]=\\\"params.energyMoveCost\\\" type=\\\"range\\\" name=\\\"points\\\" min=\\\"0\\\" max=\\\"20\\\" step=\\\".05\\\"></div>\\n              <div class=\\\"col s2 param-label\\\">{{params.energyMoveCost | number:'1.2-2'}}</div>\\n            </div>\\n    \\n            <div class=\\\"row param-row\\\">\\n              <div class=\\\"col param-label\\\">Move and eat cost:</div>\\n              <div class=\\\"col s6\\\"><input [(ngModel)]=\\\"params.energyMoveAndEatCost\\\" type=\\\"range\\\" name=\\\"points\\\" min=\\\"0\\\" max=\\\"20\\\" step=\\\".05\\\"></div>\\n              <div class=\\\"col s2 param-label\\\">{{params.energyMoveAndEatCost | number:'1.2-2'}}</div>\\n            </div>\\n\\n            <div class=\\\"row param-row\\\">\\n              <div class=\\\"col param-label\\\">Bite strength:</div>\\n              <div class=\\\"col s6\\\"><input [(ngModel)]=\\\"params.biteStrength\\\" type=\\\"range\\\" name=\\\"points\\\" min=\\\"0\\\" max=\\\"1000\\\"></div>\\n              <div class=\\\"col s2 param-label\\\">{{params.biteStrength}}</div>\\n            </div>\\n\\n            <div class=\\\"row param-row\\\">\\n              <div class=\\\"col param-label\\\">Digestion efficiency:</div>\\n              <div class=\\\"col s6\\\"><input [(ngModel)]=\\\"params.digestionEfficiency\\\" type=\\\"range\\\" name=\\\"points\\\" min=\\\"0\\\" max=\\\"100\\\"></div>\\n              <div class=\\\"col s2 param-label\\\">{{params.digestionEfficiency}}%</div>\\n            </div>\\n          </div>\\n        </li>\\n      </ul>\\n\\n    </div>\\n\\n    <div class=\\\"col s6\\\">\\n\\n      <button (click)=\\\"resetWorld()\\\" class=\\\"waves-effect waves-light btn\\\">Reset</button>\\n      <button (click)=\\\"insert('*')\\\" class=\\\"waves-effect waves-light btn\\\">Insert \\\"*\\\"</button>\\n      <button (click)=\\\"insert('M')\\\" class=\\\"waves-effect waves-light btn\\\">Insert \\\"M\\\"</button>\\n      <button (click)=\\\"insert(userGenome)\\\" class=\\\"waves-effect waves-light btn\\\">Insert: </button>\\n      <input class=\\\"user-genome\\\" type=\\\"text\\\" [(ngModel)]=\\\"userGenome\\\" placeholder=\\\"Genome\\\">\\n\\n      <!-- TOP TEN SPECIES -->\\n      <ul materialize=\\\"collapsible\\\" class=\\\"collapsible\\\"> <!-- data-collapsible=\\\"accordion\\\"> -->\\n        <li>\\n          <div class=\\\"collapsible-header\\\"><i class=\\\"material-icons\\\">whatshot</i>Top 10 Species</div>\\n          <div class=\\\"collapsible-body\\\">\\n\\n            <table class=\\\"top-ten-list\\\">\\n\\n              <tr class=\\\"header-row\\\">\\n                <th></th>\\n                <th>#</th>\\n                <th>Genome</th>\\n              </tr>\\n\\n              <tr class=\\\"entry-row\\\" *ngFor='let critterStats of topTen'>\\n                <td>\\n                  <div class=\\\"genomeColor\\\" [style.backgroundColor]=\\\"critterStats.color\\\"></div>\\n                </td>\\n\\n                <td>\\n                  {{critterStats.count}}\\n                </td>\\n\\n                <td>\\n                  {{critterStats.genome}}\\n                </td>\\n              </tr>\\n            </table>\\n          </div>\\n        </li>\\n      </ul>\\n\\n\\n      <!-- INSTRUCTION SET -->\\n      <ul materialize=\\\"collapsible\\\" class=\\\"collapsible\\\" data-collapsible=\\\"accordion\\\">\\n        <li>\\n          <div class=\\\"collapsible-header\\\"><i class=\\\"material-icons\\\">shuffle</i>Instruction Set</div>\\n          <div class=\\\"collapsible-body\\\">\\n\\n            <table class=\\\"top-ten-list\\\">\\n            \\n              <tr class=\\\"entry-row\\\" *ngFor='let instruction of allInstructions'>\\n                <td>\\n                  {{instruction.code}}\\n                </td>\\n\\n                <td>\\n                  {{instruction.description}}\\n                </td>\\n              </tr>\\n            </table>\\n          </div>\\n        </li>\\n      </ul>\\n\\n\\n\\n    </div>\\n\\n  </div>\\n</div>\\n\\n<!--\\n<h1>\\n  {{title}}\\n</h1>\\n\\n<button class=\\\"waves-effect waves-light btn\\\">Test Button</button>\\n\\n\\n<div flex layout=\\\"column\\\" class=\\\"full-screen\\\">\\n  <div flex>Title bar</div>\\n\\n  <div flex=\\\"50\\\" layout=\\\"row\\\"> \\n    <div flex class=\\\"column-simulation\\\">\\n      First column\\n\\n\\n      <app-world-view [pixels]=\\\"renderPixels\\\" style=\\\"width:512px;height:512px\\\"></app-world-view>\\n    </div>\\n    \\n    <div flex=\\\"50\\\" class=\\\"column-controls\\\">\\n      column controls\\n    <ul materialize=\\\"collapsible\\\" class=\\\"collapsible\\\" data-collapsible=\\\"accordion\\\">\\n          <li>\\n            <div class=\\\"collapsible-header\\\"><i class=\\\"material-icons\\\">filter_drama</i>First</div>\\n            <div class=\\\"collapsible-body\\\"><p>Lorem ipsum dolor sit amet.</p></div>\\n          </li>\\n          <li>\\n            <div class=\\\"collapsible-header\\\"><i class=\\\"material-icons\\\">place</i>Second</div>\\n            <div class=\\\"collapsible-body\\\"><p>Lorem ipsum dolor sit amet.</p></div>\\n          </li>\\n          <li>\\n            <div class=\\\"collapsible-header\\\"><i class=\\\"material-icons\\\">whatshot</i>Third</div>\\n            <div class=\\\"collapsible-body\\\"><p>Lorem ipsum dolor sit amet.</p></div>\\n          </li>\\n        </ul>\\n              \\n      Second column\\n      <input [(ngModel)]=\\\"params.speed\\\" type=\\\"range\\\" name=\\\"points\\\" min=\\\"0\\\" max=\\\"10\\\">\\n      params = {{params | json}}<br>\\n        Speed = {{speed}}\\n\\n    </div>\\n  </div>\\n\\n  <div flex>bottom bar</div>\\n</div>\\n-->\\n\\n<!-- Modal Trigger -->\\n<a class=\\\"waves-effect waves-light btn modal-trigger\\\" (click)=\\\"openAbout()\\\">Modal</a>\\n \\n<!-- Modal Structure -->\\n<div id=\\\"modal1\\\" class=\\\"modal bottom-sheet\\\" materialize=\\\"modal\\\" [materializeParams]=\\\"[{dismissible: false}]\\\" [materializeActions]=\\\"modalActions\\\">\\n  <div class=\\\"modal-content\\\">\\n    <h4>Yet another evolutionary simulation</h4>\\n    <p>A bunch of text</p>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <a class=\\\"waves-effect waves-green btn-flat\\\" (click)=\\\"closeAbout()\\\">Close</a>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 636\n// module chunks = 0","module.exports = \"<canvas class=\\\"world-view off-screen-canvas\\\" width=\\\"256\\\" height=\\\"256\\\"></canvas>\\n<canvas class=\\\"world-view on-screen-canvas\\\" width=\\\"256\\\" height=\\\"256\\\"\\n    on-mousedown=\\\"mousedown($event)\\\"\\n    on-mousemove=\\\"mousemove($event)\\\"\\n    on-mouseup=\\\"mouseup($event)\\\"></canvas>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/world-view/world-view.component.html\n// module id = 637\n// module chunks = 0","\nimport {Organism} from \"./organism\";\nimport {Instruction} from \"./instruction\";\n\n//module LibSim {\n\n\t/**\n\t * Element - something that occupies one of the cells on the 2D board. \n\t * \n\t * Could be a segment of a critter, or something inanimate;\n\t */\n\n\texport enum ElementType {\n\t\tBARRIER,\n\t\tFOOD,\n\t\tPOISON,\n\t\tORGANISM\n\t}\n\n\texport class Element {\n\n\t\ttype: ElementType;      // the type of this element\n\t\t\n\t\torganism: Organism;    // the parent organism, or null if this is not alive\n\t\tnext: Element;         // if in an organism, a reference to the next cell\n\t\tinstruction: Instruction;\n\t\tlocationX: number;\n\t\tlocationY: number;\n\t\tisOccluded: boolean; \n\n\t\tconstructor(type: ElementType, organism : Organism = null) {\n\t\t\tthis.initialize(type, organism);\n\t\t}\n\n\t\treset() {\n\t\t\tthis.organism = null;\n\t\t\tthis.next = null;\n\t\t\tthis.instruction = null;\n\t\t}\n\t\t\n\t\tinitialize(type: ElementType, organism : Organism = null) {\n\t\t\tthis.type = type;\n\t\t\tthis.organism = organism;\n\n\t\t\tif (type == ElementType.ORGANISM && ! organism) {\n\t\t\t\tthrow 'Element must have an organism object if of ORGANISM type!';\n\t\t\t}\n\n\t\t\tif (type != ElementType.ORGANISM && organism) {\n\t\t\t\t//throw 'Element must have ORGANISM type if organism is supplied!!';\n\t\t\t}\n\t\t}\n\t}\n\n//}\n\n\n// WEBPACK FOOTER //\n// ./src/simulation/element.ts","/**\n * The various instructions, how they are displayed and what they do\n */\n\nimport { Element } from './element';\nimport { Organism } from './organism';\nimport { World } from './world';\n\nexport enum InstructionResult {\n    DONT_ADVANCE,\n    EXECUTE_AGAIN\n}\n\n/**\n * A definition for an instuction parameter that could be tweaked by the user. For example, how far can an organism see? \n */\nexport class InstructionParameter {\n    constructor(\n        private _name:string,\n        private _key:string,\n        private _defaultValue:any\n    ) {}\n\n    get name():string { return this._name; }\n    get key():string { return this._key; }\n    get defaultValue():any { return this._defaultValue; }\n}\n\n/**\n * Base class for instructions\n */\nexport abstract class Instruction {\n\n    static readonly DEFAULT_ENERGY_IMPACT : number = -.5;\n    static _allInstructions:[Instruction];\n    static _instructionMap:{[code: string]: Instruction} = {};\n\n    private _parameters:any = {};\n\n    static allCodes:string = ''; // all the instructions in code form\n\n    /**\n     * Initialize and register this instruction\n     */\n    constructor(\n        private _code:string,           // a letter or symbol\n        private _description:string,\n        energyImpact:number = Instruction.DEFAULT_ENERGY_IMPACT,\n        private _parameterDefinitions:[InstructionParameter] = null\n        ) {\n\n            Instruction.allCodes += _code;\n\n            // fast lookup on code\n            Instruction._instructionMap[_code] = this;\n\n            // create the energy impact parameter, and add it to the definition array\n            var energyImpactParam:InstructionParameter =\n                new InstructionParameter(\"Energy impact\", \"energyImpact\", Instruction.DEFAULT_ENERGY_IMPACT);\n            if (this._parameterDefinitions == null) {\n                this._parameterDefinitions = [energyImpactParam];\n            }\n            else {\n                this._parameterDefinitions.push(energyImpactParam);\n            }\n\n            // now set up the default parameter values\n            for (var i in this._parameterDefinitions) {\n                var parameter:InstructionParameter = this._parameterDefinitions[i];\n                this._parameters[parameter.key] = parameter.defaultValue;\n            }\n\n            // register this instruction in a static array\n            if (! Instruction._allInstructions) {\n                Instruction._allInstructions = [this];\n            }\n            else {\n                Instruction._allInstructions.push(this);\n            }\n        }\n\n    static get allInstructions():[Instruction] { return Instruction._allInstructions; }\n    \n    static instructionFromCode(code:string):Instruction {\n        return Instruction._instructionMap[code];\n    }\n    get description():string { return this._description; }\n    get code():string { return this._code; }\n    get energyImpact():number { return this._parameters.energyImpact }\n\n    abstract do(organism : Organism, world:World, element: Element):any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/simulation/instruction.ts","export class WorldParameters {\n\n  static readonly WORLDSIZE: number = 256;\n\n  // simulation parameters\n  speed: number = 5;\n  maximumOrganisms:number = 30000;\n  initialFoodCount: number = 1000;\n  foodDropSpeed: number = 50;\n\n  // the percentage of times a newly spawned offspring will have a mutation\n  mutationRate: number = 10;\n\n  // the amount of energy required to spawn a new offspring\n  spawnEnergyPerSegment: number = 200;\n\n  // lifespan\n  lifespanPerSegment: number = 50000;\n  lifespanRandomizationPercent: number = 10;\n\n  energyTurnCost: number = 1;\n  energyMoveCost: number = 2;\n  energyMoveAndEatCost: number = 15;\n  energyGainedFromPhotosythesizing: number = 1.25;\n  biteStrength: number = 200;\n  digestionEfficiency:number = 50;\n\n  constructor() {\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/simulation/world-parameters.ts"],"sourceRoot":""}